/*#############################################################################################################################################################
##  filename:						cg-globalWinfunctions
##
##  purpose:						library of windows-based functions for use in caregiver workflow script development in order to minimize code
##									duplication, increase script cleanliness/readability, and reduce maintenance efforts by providing a single
##									centralized location for changes
##
##  contents:						winSendKeys
##
#############################################################################################################################################################*/

/*=============================================================================================================================================================
== function name:           winSendKeys
==
== developer:               todd busch
==
== purpose:                 emulates using the keyboard to type the keys in the specified key list
==
== input parms:            	key_list$:	the keys to be typed
==                          step$:		terse description of the action/step in the script (e.g. "closing popup")
==
== returns:                 int:	0 - on success		error_code - on failure
==
== notes:                   be sure the last context set was to a window to receive the typed keys
==
=============================================================================================================================================================*/
function winSendKeys(key_list$, step$)
	local r

	r = sendkeys(key_list$, noactivate)

	if r <> 0 then
		write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error " + step$, crlf)
		write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error_code: (" + str$(r) + ") msg: " + #errormsg$, crlf)
		write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
		hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-" + step$ + ".bmp", 1, 1)
		write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed; proceeding to next change event", crlf + crlf)
		write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
		write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
		write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": SSN: " + applicantSSN$, crlf)
		write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - " + step$, crlf + crlf)
		closebrowser()
		winSendKeys = r
	endif

	if r = 0 then
		winSendKeys = 0
	endif

endfunction