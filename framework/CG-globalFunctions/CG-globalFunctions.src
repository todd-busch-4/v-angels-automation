'##############################################################################################################################################################
'##  filename:						global functions																										 ##
'##																																							 ##
'##																																							 ##
'##  purpose:						comprises a library of functions to be used in workflow script development												 ##
'##									with the intent and goal to minimize code duplication and increase script												 ##
'##									cleanliness and readability as well as reduce maintenance efforts														 ##
'##																																							 ##
'##																																							 ##
'##  contents:						gmsErrorCheck$, gmsNoRehireCheck, zeroPadDate$, webSetText																 ##
'##																																							 ##
'##																																							 ##
'##############################################################################################################################################################

/*=============================================================================================================================================================
== function name:           gmsErrorCheck$
==
==
== developer:               todd busch
==
==
== purpose:                 handle gms errors displayed in popup dialogbox when entering form data on new hire page
==
==
== input parms:            	none
==
==
== returns:                 string - one of canned msgs for known errors or the parsed error text for unknown errors or no error "found"
==
==
== notes:                   dialogbox cannot be seen by wintask at all. capturing ocr in area where it pops up and analyzes text found if any to determine
==							what/if any error occurred
==
==
== chg Control   	ver		  by		description
==-------------------------------------------------------------------------------------------------------------------------------------------------------------
== mm/dd/yyyy		1.0		tbusch		initial version
==
=============================================================================================================================================================*/
function gmsErrorCheck$()
	local r

	'get focus off textfield to prompt popup if error
	usewindow("FIREFOX.EXE|MozillaWindowClass|Group Management Services - New Hire — Mozilla Firefox", 1)
	clickmouse(left, down, 950, 250, absolute)
	clickmouse(left, up, 950, 250, absolute)
	pause 2

	r = useocrengine(3)

	'return error if ocrengine fails
	if r <> 0 then
		gmsErrorCheck$ = "ocrengine error"
		exitfunction
	endif

	'capture area error popup is typically displayed in
	err$ = captureareaocr$("FIREFOX.EXE|MozillaWindowClass|Group Management Services - New Hire — Mozilla Firefox", topinstance(), 739, 467, 191, 442)

	'check for captured error msg
	if instr(err$, "© gmsprismhicom") <> 0 then
		
		'look for & return dup ssn error - previous employee
		if instr(err$, "belongs to") <> 0 then
			gmsErrorCheck$ = "duplicate ssn of previous employee"
			exitfunction
		endif

		'look for & return dup ssn error - onboarding
		if instr(err$, "onboarding") <> 0 then
			gmsErrorCheck$ = "duplicate ssn of applicant in onboarding"
			exitfunction
		endif

		'look for & return invalid char error
		if instr(err$, "Invalid characters found") <> 0 then
			gmsErrorCheck$ = "invalid character error"
			exitfunction
		endif

		'catch all for unknown errors
		err$ = mid$(err$, 18, 200)		'trim var to just msg text
		gmsErrorCheck$ = err$
		exitfunction

	endif

	if instr(err$, "© gmsprismhicom") = 0 then
		gmsErrorCheck$ = "no error found"
	endif

endfunction


/*=============================================================================================================================================================
== function name:           gmsNoRehireCheck
==
==
== developer:               todd busch
==
==
== purpose:                 checks for popup indicating an applicant had previsouly been set to "no-rehire"
==
==
== input parms:            	none
==
==
== returns:                 int - (0) if warning not found; (1) if warning was found
==
==
== notes:                   pertinentinfo
==
==
== chg Control   	ver		  by		description
==-------------------------------------------------------------------------------------------------------------------------------------------------------------
== mm/dd/yyyy		1.0		tbusch		initial version
==
=============================================================================================================================================================*/
function gmsNoRehireCheck$()

	ret = useocrengine(3)

	'return error if ocrengine fails
	if r <> 0 then
		gmsNoRehireCheck$ = "ocrengine error"
		exitfunction
	endif

	'capture ocr in area where popup is typically displayed
	err$ = captureareaocr$("FIREFOX.EXE|MozillaWindowClass|Group Management Services - Rehire — Mozilla Firefox", topinstance(), 731, 459, 244, 502)

	'exit function if no error popup found
	if instr(err$, "© gmsprismhicom") = 0 then
		gmsNoRehireCheck$ = "no error found"
		exitfunction
	endif

	'if popup error is found...
	if instr(err$, "© gmsprismhicom") <> 0 then

		'return msg for no-rehire designation
		if instr(err$, "No-Rehire") <> 0 then
			gmsNoRehireCheck$ = "true"
			exitfunction
		endif

		'return msg for employed status 'a'
		if instr(err$, "You may not perform a Rehire on an employee with a status of") <> 0 then
			gmsNoRehireCheck$ = "status 'a' employee"
			exitfunction
		endif

		'catch all for unknown errors
		err$ = mid$(err$, 18, 200)		'trim var to just msg text
		gmsErrorCheck$ = err$
		exitfunction

	endif


endfunction


/*=============================================================================================================================================================
== function name:           zeroPadDate$
==
==
== developer:               todd busch
==
==
== purpose:                 adds a leading zero to single digit day and month parts of a short formatted date (m/d/yyyy)
==
==
== input parms:            	dt_date$:	the date to be converted
==
==
== returns:                 string:		the converted date with leading zeros
==
==
== notes:                   n/a
==
==
== chg Control   	ver		  by		description
==-------------------------------------------------------------------------------------------------------------------------------------------------------------
== 01/30/2023		1.0		tbusch		initial version
==
=============================================================================================================================================================*/
function zeroPadDate$(dt_date$)
	local r

	'-------------------- parse date into parts
	'get day part
	dtDay$ = left$(dt_date$, 2)

	'get year part
	dtYr$ = right$(dt_date$, 4)

	'get month part
	r = instr(dt_date$, "/")
	dtMo$ = mid$(dt_date$, r + 1, 2)

	'add leading zero to day if single digit
	if instr(dtDay$, "/") <> 0 then
		dtDay$ = "0" + left$(dtDay$, 1)
	endif
	
	'add leading zero to day if single digit
	if instr(dtMo$, "/") <> 0 then
		dtMo$ = "0" + left$(dtMo$, 1)
	endif

	'reassmble date parts
	zeroPadDate$ = dtDay$ + "/" + dtMo$ + "/" + dtYr$

endfunction


/*=============================================================================================================================================================
== function name:           funcName
==
==
== developer:               todd busch
==
==
== purpose:                 terseDescription
==
==
== input parms:            	paramName:	purpose
==
==
== returns:                 n/a
==
==
== notes:                   pertinentinfo
==
==
== chg Control   	ver		  by		description
==-------------------------------------------------------------------------------------------------------------------------------------------------------------
== mm/dd/yyyy		1.0		tbusch		initial version
==
=============================================================================================================================================================*/
function webSetText(object$, text$, task$)
	local r

	r = writehtml(object$, text$)
	'------- error handling
	if r <> 0 then
		write(debugLogPath$, basicLogHdr$ + currScript$ + ": error " + task$, crlf)
		write(debugLogPath$, basicLogHdr$ + currScript$ + ": error_code: (" + str$(r) + ") msg: " + #errormsg$, crlf)
		write(debugLogPath$, basicLogHdr$ + currScript$ + ": resuming scan for next change event", crlf + crlf)
		hardcopy(screenshotsPath$ + "_" + currScript$ + "_" + task$ + ".bmp", 1, 1)
		write(executionLogPath$, currDate$ + "-" + currTime$ + ": " + currScript$ + ": workflow failed for record id (" + applicantID$ + ")", crlf + crlf)
		write(scanFailuresPath$, currDate$ + "-" + currTime$ + ": " + currScript$ + ": record id: " + applicantID$, crlf)
		write(scanFailuresPath$, currDate$ + "-" + currTime$ + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
		write(scanFailuresPath$, currDate$ + "-" + currTime$ + ": " + currScript$ + ": result: script error - " + task$, crlf + crlf)
		webSetText = r
	endif
	if r = 0 then
		webSetText = 0
	endif

endfunction


