'###############################################################################################################################################################
'##  filename:						cg-gmsSubmitFormFunctions
'##
'##  purpose:						library of functions for use in gmsDubmitForm script development in order to minimize code duplication, increase script
'##									cleanliness/readability, and reduce maintenance efforts by providing a single centralized location for changes
'##
'###############################################################################################################################################################
'=============================================================================================================================================================
'== function name:     		    gmsSubmitErrorChk
	'==
	'== developer:              todd busch
	'==
	'== purpose:                handle gms errors displayed in popup dialogbox when entering form data on new hire page
	'==
	'== input parms:            none
	'==
	'== returns:                int -	0: for ocrengine failure;
	'==									1: for all other errors
	'== 								2: for previous employee; 
	'==
	'== notes:                  dialogbox cannot be seen by wintask at all. capturing ocr in area where it pops up and analyzes text found if any to determine
	'==							what/if any error occurred
	'==
'=============================================================================================================================================================*/
function gmsSubmitErrorChk()
	local r, err$

	'get focus off textfield to prompt popup if error
	usewindow(pgGMSNewHireForm$, 1)
	clickmouse(left, down, 950, 250, absolute)
	clickmouse(left, up, 950, 250, absolute)
	pause 2

	r = useocrengine(3)

	'return error if ocrengine fails
	if r <> 0 then
		write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": ocrengine failed trying to capture error popup", crlf)
		write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error_code: (" + str$(r) + ") msg: " + #errormsg$, crlf)
		write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": continuing though app is in unverified state", crlf)
		gmsSubmitErrorChk = 0
		exitfunction
	endif

	'capture area error popup is typically displayed in
	err$ = captureareaocr$(pgGMSNewHireForm$, topinstance(), 739, 467, 191, 442)

	'check for captured error msg
	if instr(err$, "gmsprismhicom") <> 0 then
		
		'handle dup ssn error for previous employee
		if instr(err$, "belongs to") <> 0 then
			write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": ssn belongs to a previous employee; proceeding to rehire form", crlf)
			gmsSubmitErrorChk = 2
			exitfunction
		endif

		'look for & return dup ssn error - onboarding
		if instr(err$, "onboarding") <> 0 then
			write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": ssn belongs to applicant in onboarding", crlf)
			write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
			write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
			write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
			write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: gmsSubmitErrorChk - applicant in onboarding", crlf + crlf)
			gmsSubmitErrorChk = 1
			closebrowser()
			exitfunction
		endif

		'look for & return invalid char error
		if instr(err$, "Invalid characters found") <> 0 then
			write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": invalid character error", crlf)
			write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
			write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
			write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
			write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: gmsSubmitErrorChk - invalid character", crlf + crlf)
			gmsSubmitErrorChk = 1
			closebrowser()
			exitfunction
		endif

		'catch all for unknown errors
		err$ = mid$(err$, 18, 200)		'trim var to just msg text
		write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": an unknown error occurred", crlf)
		write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": " + err$, crlf)
		write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
		write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
		write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
		write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: gmsSubmitErrorChk - " + err$, crlf + crlf)
		closebrowser()
		gmsSubmitErrorChk = 1
		exitfunction

	endif

endfunction