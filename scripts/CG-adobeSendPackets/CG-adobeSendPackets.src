'###############################################################################################################################################
'## author:                 todd busch
'##
'## date:                   12/05/2022
'##
'## description:            scans the change event column in employment inquiry list.xlsx spreadsheet in package downloads folder; it will 
'##							send the appropriate packets (pre and 1st int or 2nd int) for rows flagged 'yes' that have a 1st or 2nd  
'##							interview stage and do not have any reference to those packets in the adobe status column (e.g. [1st int pkt sent]) 
'##
'## run in:					chrome
'##
'## notes:                  it checks the status of each packet individually so in the case of 1st interview, if one or the other has already
'##							been sent it will send the one that hasn't. It will not send a packet that has ANY reference to it in the adobe
'##							status column, regardless of what the actual status is (sent, viewed, cancelled, etc.)
'##							
'###############################################################################################################################################

'###############################################################################################################################################
'##   													script prep																			  ##
'###############################################################################################################################################
include "C:\v-angels-automation\framework\CG-globalDimDeclarations\CG-globalDimDeclarations.src"
include "C:\v-angels-automation\framework\CG-globalFunctions\CG-globalFunctions.src"
include "C:\v-angels-automation\framework\CG-adobeFunctions\CG-adobeFunctions.src"
include "C:\v-angels-automation\framework\CG-globalLogging\CG-globalLogging.src"
include "C:\v-angels-automation\framework\CG-globalSubDefinitions\CG-globalSubDefinitions.src"
include "C:\v-angels-automation\framework\CG-globalVariables\CG-globalVariables.src"
include "C:\v-angels-automation\object-repos\adobe\adobeObjectRepository.src"


currScript$ = "CG-adobeSendPackets"


#IgnoreErrors = 1


'-------------------- read in columns from employment inquiry doc
if loadEmploymentInquiryRows() = 1 then
	criticalStop()
endif


'#############################################################################################################################
'##   													script start								 						##
'#############################################################################################################################
logStartScript("adobe send")


'------------------------------------------------------------------------------------------------------------------------------ begin iterating through change event column
i = 0


repeat

	
	'-------------------- get change status of current row
	curr_status$ = arrChangeEvents$(i)


	if curr_status$ = "Yes" then
		iEventCnt = iEventCnt + 1	'change event counter
		iExcelRow = i + 2			'add 1 for header row and 1 for zero indexed arrays
		logEventFound()


		'-------------------- get the stage for the current change event
		curr_stage$ = arrCurrentStage$(i)


'------------------------------------------------------------------------------------------------------------------------------------------- 1st interview stage
		if curr_stage$ = "1st Interview" then
			iFirstCnt = iFirstCnt + 1		'stage counter
			logStageMatch()


			'-------------------- get data values for current record from employment inquiry
			applicantID$ = arrApplicantID$(i)
			applicantFName$ = arrApplicantFName$(i)
			applicantLName$ = arrApplicantLName$(i)
			applicantEmail$ = arrApplicantEmail$(i)
			adobePcktStatus$ = arrAdobePcktStatus$(i)
			logDataValues()


			'-------------------- check for already sent packets
			if adobeSendStatusChk("Pre 1st Pkt", "pre 1st") = 1 then
				goto firstInterviewSend
			endif


			'-------------------------------------------------------------------------------------------------------------------------------- send pre 1st interview packet
			'-------------------- invoke browser window
			if invokeBrowser("CH", adobeURL$) <> 0 then
				nextScript()
				goto nextIteration
			endif
	

			'-------------------- log in if not already
			if adobeLogIn() = 1 then
				nextScript()
				goto nextIteration
			endif


			'-------------------- click 'tools' link in upper-left of main frame
			usepage(pgHomePage$)
			if webClickElement(pgHomePage$, "clicking tools") <> 0 then
				goto nextIteration
			endif
			pause 3					




			'------- validation
			ret = useocrengine(3)
			pause 10 secs until
				textocr("Request e-signatures")
				inwindow(wndHomePage$, 1)
				inarea(529, 374, 189, 281)
			pausefalse
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) clicking 'tools' link validation failed", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) expected element text (request signatures) not found", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-pre_click_tools_link.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - pre click tools", crlf + crlf)
				goto nextIteration
			endpause
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) clicked 'tools' link", crlf)
			endif


			'-------------------- click 'request signatures' box in tools carousel menu
			usepage(pgHomePage$)
			res = clickhtmlelement("DIV[OUTERTEXT='Request', INDEX=3]")
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) error clicking 'request signatures'. error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-pre_click_request_signatures.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - pre click request signatures", crlf + crlf)
				closebrowser()
				goto nextIteration
			endif
			'------- validation
			usepage(pgHomePage$)
			ret = existhtmlelement("DIV[OUTERTEXT='Request e-signaturesRecentDocumentsMy', INDEX=2]")
			if ret = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) clicking 'request signatures' link validation failed", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) expected element (file select popup) not found.", crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-pre_click_request_signatures.bmp", 1, 1)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) resuming scan for next change event", crlf + crlf)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - pre click request signatures", crlf + crlf)
				closebrowser()
				goto nextIteration
			endif
			'------- debug logging
			if ret = 1 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) clicked 'request signatures' link", crlf)
			endif


			'-------------------- click 'documents' in top menu of request signatures popup
			usepage(pgHomePage$)
			res = clickhtmlelement("SPAN[OUTERTEXT='Documents', INDEX=3]")
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) error clicking 'documents' link. error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-pre_click_documents_link.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - pre click documents", crlf + crlf)
				closebrowser()
				goto nextIteration
			endif
			'------- validation
			ret = useocrengine(3)
			pause 10 secs until
				textocr("Automated")
				inwindow(wndHomePage$, 1)
				inarea(611, 437, 337, 714)
			pausefalse
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) clicking 'documents' link validation failed", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) expected element (automated folder) not found", crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-pre_click_documents_link.bmp", 1, 1)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) resuming scan for next change event", crlf + crlf)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - pre click documents", crlf + crlf)
				closebrowser()
				goto nextIteration
			endpause
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) clicked 'documents' link", crlf)
			endif


			'-------------------- click 'automated' folder
			usepage(pgHomePage$)
			res = clickhtmlelement("DIV[OUTERTEXT='Auto', INDEX=9]")
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) error clicking 'automated' folder. error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-pre_click_automated_folder.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - pre click automated", crlf + crlf)
				closebrowser()
				goto nextIteration
			endif
			'------- validation
			ret = useocrengine(3)
			if iEnvironment = 1 then
				pause 10 secs until
					textocr("Employee Forms")
					inwindow(wndHomePage$, 1)
					inarea(611, 437, 337, 714)
				pausefalse
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) clicking 'automated' folder validation failed", crlf)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) expected element (employee forms folder) not found", crlf)
					hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-pre_click_automated_folder.bmp", 1, 1)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) resuming scan for next change event", crlf + crlf)
					write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) workflow failed; proceeding to next change event", crlf + crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - pre click automated", crlf + crlf)
					closebrowser()
					goto nextIteration
				endpause
			endif
			if iEnvironment = 2 then
				pause 10 secs until
					textocr("Employee Forms")
					inwindow(wndHomePage$, 1)
					inarea(605, 583, 71, 523)
				pausefalse
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) clicking 'automated' folder validation failed", crlf)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) expected element (employee forms folder) not found", crlf)
					hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-pre_click_automated_folder.bmp", 1, 1)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) resuming scan for next change event", crlf + crlf)
					write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) workflow failed; proceeding to next change event", crlf + crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - pre click automated", crlf + crlf)
					closebrowser()
					goto nextIteration
				endpause
			endif
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) clicked 'automated' folder", crlf)
			endif


			'-------------------- click 'employee forms' folder
			usepage(pgHomePage$)
			res = clickhtmlelement("DIV[CONTENT='EmployeEmployee']")
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) error clicking 'employee forms' folder. error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-pre_click_employee_forms_folder.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - pre click employee forms", crlf + crlf)
				closebrowser()
				goto nextIteration
			endif
			'------- validation
			ret = useocrengine(3)
			pause 10 secs until
				textocr("Applicant to New Hire")
				inwindow(wndHomePage$, 1)
				inarea(611, 437, 337, 714)
			pausefalse
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) clicking 'employee forms' folder validation failed", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) expected element (applicant to new hire folder) not found", crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-pre_click_employee_forms_folder.bmp", 1, 1)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) resuming scan for next change event", crlf + crlf)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - pre click employee forms", crlf + crlf)
				closebrowser()
				goto nextIteration
			endpause
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) clicked 'employee forms' folder", crlf)
			endif


			'-------------------- click 'applicant to new hire forms' folder
			ret = useocrengine(3)
			usewindow(wndHomePage$, 1)
			if iEnvironment = 1 then
				res = clickontextocr("Applicant to New Hire", left, single, inarea(641, 581, 628, 73))
			endif
			if iEnvironment = 2 then
				clickmouse(left, double, 780, 630, absolute)
			endif
			pause 5
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) error clicking 'applicant to new hire' folder. error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-pre_applicant_to_new_hire_forms_folder.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - pre click applicant to new hire forms", crlf + crlf)
				closebrowser()
				goto nextIteration
			endif
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) clicked 'applicant to new hire' folder", crlf)
			endif


			'-------------------- click 'pre 1st interview packet.pdf'
			usepage(pgHomePage$)
			res = clickhtmlelement("DIV[CONTENT='PRE 1st IntervPRE']")
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) error clicking 'pre 1st interview packet'. error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-pre_click_pre_1st_interview_packet.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - click pre 1st packet", crlf + crlf)
				closebrowser()
				goto nextIteration
			endif
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) selected 'pre 1st interview packet", crlf)
			endif


			'-------------------- click 'continue' button
			usepage(pgHomePage$)
			res = clickhtmlelement("BUTTON[INNERTEXT='Continue']")
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) error clicking 'continue' button. error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-pre_click_continue_button.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - pre click continue", crlf + crlf)
				closebrowser()
				goto nextIteration
			endif
			'------- validation
			ret = useocrengine(3)
			pause 10 secs until
				textocr("Get documents signed")
				inwindow(wndHomePage$, 1)
				inarea(497, 178, 105, 679)
			pausefalse
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) click 'continue' button validation failed", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) expected text (get document signed) not found", crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-pre_click_continue_button.bmp", 1, 1)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) resuming scan for next change event", crlf + crlf)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - pre click continue", crlf + crlf)
				closebrowser()
				goto nextIteration
			endpause
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) clicked 'continue' button", crlf)
			endif


			'-------------------- enter applicant email
			ret = useocrengine(3)
			usewindow(wndHomePage$, 1)
			if iEnvironment = 1 then
				clickontextocr("Enter recipient email", left, single, inarea(655, 358, 165, 21))
			endif
			if iEnvironment = 2 then
				clickontextocr("Enter recipient email", left, single, inarea(520, 312, 759, 46))
			endif
			res = sendkeys(applicantEmail$)
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) error entering applicant email", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-pre_enter_applicant_email.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - pre enter applicant email", crlf + crlf)
				closebrowser()
				goto nextIteration
			endif
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) entered applicant email", crlf)
			endif


			'-------------------- add company email
			ret = useocrengine(3)
			usewindow("CHROME.EXE|Chrome_WidgetWin_1|Adobe Acrobat E-Sign - Google Chrome", 1)
			if iEnvironment = 1 then
				clickontextocr("Enter recipient email", left, single, inarea(645, 407, 166, 29))
			endif
			if iEnvironment = 2 then
				clickmouse(left, double, 665, 390, absolute)
			endif
			res = sendkeys(corpEmail$)
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) error entering corporate email", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-pre_enter_corporate_email.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - pre enter corporate email", crlf + crlf)
				closebrowser()
				goto nextIteration
			endif
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) entered corporate email", crlf)
			endif


			'-------------------- add applicant name to message box
			ret = useocrengine(3)
			usewindow(wndHomePage$, 1)
			if iEnvironment = 1 then
				clickontextocr("PRE", left, single, inarea(529, 575, 177, 32), -85, 0) 'offset to place cursor at beginning of text.
			endif
			if iEnvironment = 2 then
				clickmouse(left, down, 535, 560, absolute)
				clickmouse(left, up, 535, 560, absolute)
			endif
			res = sendkeys(applicantFName$ + " " + applicantLName$ + " ")
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) error adding applicant name to message box", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-pre_add_applicant_name.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - pre add applicant name", crlf + crlf)
				closebrowser()
				goto nextIteration
			endif
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) added applicant name to message box", crlf)
			endif


			'-------------------- click 'next' button
			ret = useocrengine(3)
			usewindow("CHROME.EXE|Chrome_WidgetWin_1|Adobe Acrobat E-Sign - Google Chrome", 1)
			if iEnvironment = 1 then
				res = clickontextocr("ocd", left, single, inarea(496, 935, 149, 80))
				'------- error handling
				if res <> 0 then
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) error clicking 'next' button", crlf)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) resuming scan for next change event", crlf + crlf)
					hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-pre_click_next.bmp", 1, 1)
					write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) workflow failed; proceeding to next change event", crlf + crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - pre click next", crlf + crlf)
					closebrowser()
					goto nextIteration
				endif
			endif
			if iEnvironment = 2 then
				clickmouse(left, double, 560, 940, absolute)
			endif
			pause 2
			'------- validation
			ret = useocrengine(3)
			pause 30 secs until
				textocr("CONFIDENTIALITY OF PROTECTED")
				inwindow(wndHomePage$, 1)
				inarea(526, 313, 151, 685)
			pausefalse
				result = useocrengine(3)
				var$ = captureocr$(wndHomePage$, topinstance())
				if instr(var$, "Email provided is invalid") <> 0 then
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) email provided is invalid; resuming scan for next change event", crlf + crlf)
					hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-pre_invalid_email.bmp", 1, 1)
					write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) workflow failed; proceeding to next change event", crlf + crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: pre invalid email", crlf + crlf)
					closebrowser()
					goto nextIteration
				else
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) clicking 'next' button validation failed", crlf)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) expected text (confidentiality of protected) not found", crlf)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) resuming scan for next change event", crlf + crlf)
					hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-pre_click_next_button.bmp", 1, 1)
					write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) workflow failed; proceeding to next change event", crlf + crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - pre click next", crlf + crlf)
					closebrowser()
					goto nextIteration
				endif
			endpause
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) clicked 'next' button", crlf)
			endif


			'-------------------- click 'send' button
			ret = useocrengine(3)
			usewindow("CHROME.EXE|Chrome_WidgetWin_1|Adobe Acrobat E-Sign - Google Chrome", 1)
			if iEnvironment = 1 then
				res = clickontextocr("D>", left, single, inarea(1779, 933, 139, 76))
				'------- error handling
				if res <> 0 then
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) error clicking 'send' button", crlf)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) resuming scan for next change event", crlf + crlf)
					hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-pre_click_send_button.bmp", 1, 1)
					write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) workflow failed; proceeding to next change event", crlf + crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - pre click send", crlf + crlf)
					closebrowser()
					goto nextIteration
				endif
			endif
			if iEnvironment = 2 then
				clickmouse(left, double, 1850, 970, absolute)
			endif
			pause 2
			'------- validation
			ret = useocrengine(3)
			pause 20 secs until
				textocr(applicantFName$)
				inwindow(wndHomePage$, 1)
				inarea(568, 270, 148, 832)
			pausefalse
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) clicking 'send' button validation failed", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) expected text (send confirmation) not found", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-pre_click_send_button.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (pre) workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - pre click send", crlf + crlf)
				closebrowser()
				goto nextIteration
			endpause
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": pre 1st interview packet sent", crlf)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": pre 1st Interview packet sent", crlf)
				write(successLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(successLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(successLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": pre 1st Interview packet sent", crlf + crlf)
			endif


			closebrowser()		'use browser invoke retry for next packet send in case of 400 errors navigating back to home


firstInterviewSend:
			'-------------------- check for already sent packets
			write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": checking packet status", crlf)
			write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": value of adobePcktStatus: " + adobePcktStatus$, crlf)
			if instr(adobePcktStatus$, "1st Int Pkt") <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": status indicates 1st interview packet has already been sent", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": 1st interview packet has been sent, proceeding to next change event", crlf + crlf)
				goto nextIteration
			endif


			'-------------------------------------------------------------------------------------------------------------------------------- send 1st interview packet
			'-------------------- invoke browser window
			if invokeBrowser("CH", adobeURL$) <> 0 then
				nextScript()
				goto nextIteration
			endif


			'-------------------- check for login page
			if existhtmlelement("INPUT EMAIL[NAME='username', ID='EmailPage-EmailField']") = 1 then	
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) adobe acct was not signed in", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) logging in", crlf)
				usepage("Adobe ID")
				writehtml("INPUT EMAIL[NAME='username']", adobeUsername$)
				writehtml("INPUT TEXT[NAME='password']", adobePassword$)
				clickhtmlelement("SPAN[OUTERTEXT='Continue']")
				pause 3
				if currentpage$() <> pgHomePage$ then
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) error logging in. browser not loaded to expected page", crlf)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) expected: 'Adobe Acrobat Home' actual: " + currentpage$(), crlf)
					hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-1st_login_error.bmp", 1, 1)
					closebrowser()
					nextScript()
					goto nextIteration
				else
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) browser invoked and log in successfull", crlf)
				endif
			endif


			if currentpage$() = pgHomePage$ then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) browser invoked. account already logged in", crlf)
			endif


			'-------------------- click 'tools' link in upper-left of main frame
			usepage(pgHomePage$)
			res = clickhtmlelement(lnkTools)
			pause 3					
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) error clicking 'tools' link. error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) resuming scan for next change event", crlf + crlf)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - 1st click tools", crlf + crlf)
				closebrowser()
				goto nextIteration
			endif
			'------- validation
			ret = useocrengine(3)
			pause 10 secs until
				textocr("Request e-signatures")
				inwindow(wndHomePage$, 1)
				inarea(529, 374, 189, 281)
			pausefalse
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) clicking 'tools' link validation failed", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) expected element text (request signatures) not found", crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-1st_click_tools_link.bmp", 1, 1)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) resuming scan for next change event", crlf + crlf)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - 1st click tools", crlf + crlf)
				goto nextIteration
			endpause
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) clicked 'tools' link", crlf)
			endif


			'-------------------- click 'request signatures' box in tools carousel menu
			usepage(pgHomePage$)
			res = clickhtmlelement("DIV[OUTERTEXT='Request', INDEX=3]")
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) error clicking 'request signatures'. error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-1st_click_request_signatures.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - 1st click request signatures", crlf + crlf)
				closebrowser()
				goto nextIteration
			endif
			'------- validation
			usepage(pgHomePage$)
			ret = existhtmlelement("DIV[OUTERTEXT='Request e-signaturesRecentDocumentsMy', INDEX=2]")
			if ret = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) clicking 'request signatures' link validation failed", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) expected element (file select popup) not found.", crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-1st_click_request_signatures.bmp", 1, 1)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) resuming scan for next change event", crlf + crlf)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - 1st click request signatures", crlf + crlf)
				closebrowser()
				goto nextIteration
			endif
			'------- debug logging
			if ret = 1 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) clicked 'request signatures' link", crlf)
			endif


			'-------------------- click 'documents' in top menu of request signatures popup
			usepage(pgHomePage$)
			res = clickhtmlelement("SPAN[OUTERTEXT='Documents', INDEX=3]")
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) error clicking 'documents' link. error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-1st_click_documents_link.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - 1st click documents", crlf + crlf)
				closebrowser()
				goto nextIteration
			endif
			'------- validation
			ret = useocrengine(3)
			pause 10 secs until
				textocr("Automated")
				inwindow(wndHomePage$, 1)
				inarea(611, 437, 337, 714)
			pausefalse
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) clicking 'documents' link validation failed", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) expected element (automated folder) not found", crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-1st_click_documents_link.bmp", 1, 1)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) resuming scan for next change event", crlf + crlf)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - 1st click documents", crlf + crlf)
				closebrowser()
				goto nextIteration
			endpause
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) clicked 'documents' link", crlf)
			endif


			'-------------------- click 'automated' folder
			usepage(pgHomePage$)
			res = clickhtmlelement("DIV[OUTERTEXT='Auto', INDEX=9]")
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) error clicking 'automated' folder. error_code: (" + str$(res) + ") Msg: " + #ErrorMsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-1st_click_automated_folder.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - 1st click automated", crlf + crlf)
				closebrowser()
				goto nextIteration
			endif
			'------- validation
			ret = useocrengine(3)
			if iEnvironment = 1 then
				pause 10 secs until
					textocr("Employee Forms")
					inwindow(wndHomePage$, 1)
					inarea(611, 437, 337, 714)
				pausefalse
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) clicking 'automated' folder validation failed", crlf)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) expected element (employee forms folder) not found", crlf)
					hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-1st_click_automated_folder.bmp", 1, 1)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) resuming scan for next change event", crlf + crlf)
					write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) workflow failed; proceeding to next change event", crlf + crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - 1st click automated", crlf + crlf)
					closebrowser()
					goto nextIteration
				endpause
			endif
			if iEnvironment = 2 then
				pause 10 secs until
					textocr("Employee Forms")
					inwindow(wndHomePage$, 1)
					inarea(605, 583, 71, 523)
				pausefalse
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) clicking 'automated' folder validation failed", crlf)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) expected element (employee forms folder) not found", crlf)
					hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-1st_click_automated_folder.bmp", 1, 1)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) resuming scan for next change event", crlf + crlf)
					write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) workflow failed; proceeding to next change event", crlf + crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - 1st click automated", crlf + crlf)
					closebrowser()
					goto nextIteration
				endpause
			endif
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) clicked 'automated' folder", crlf)
			endif


			'-------------------- click 'employee forms' folder
			usepage(pgHomePage$)
			res = clickhtmlelement("DIV[CONTENT='EmployeEmployee']")
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) error clicking 'employee forms' folder. error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-1st_click_employee_forms_folder.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - 1st click employee forms", crlf + crlf)
				closebrowser()
				goto nextIteration
			endif
			'------- validation
			ret = useocrengine(3)
			pause 10 secs until
				textocr("Applicant to New Hire")
				inwindow(wndHomePage$, 1)
				inarea(611, 437, 337, 714)
			pausefalse
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) clicking 'employee forms' folder validation failed", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) expected element (applicant to new hire folder) not found", crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-1st_click_employee_forms_folder.bmp", 1, 1)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) resuming scan for next change event", crlf + crlf)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - 1st click employee forms", crlf + crlf)
				closebrowser()
				goto nextIteration
			endpause
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) clicked 'employee forms' folder", crlf)
			endif


			'-------------------- click 'applicant to new hire forms' folder
			ret = useocrengine(3)
			usewindow(wndHomePage$, 1)
			if iEnvironment = 1 then
				res = clickontextocr("Applicant to New Hire", left, single, inarea(641, 581, 628, 73))
			endif
			if iEnvironment = 2 then
				clickmouse(left, double, 780, 630, absolute)
			endif
			pause 5
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) error clicking 'applicant to new hire' folder. error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-1st_applicant_to_new_hire_forms_folder.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - 1st click applicant to new hire forms", crlf + crlf)
				closebrowser()
				goto nextIteration
			endif
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) clicked 'applicant to new hire' folder", crlf)
			endif


			'-------------------- click '1st interview packet.pdf'
			res = clickhtmlelement("DIV[OUTERTEXT='1st', INDEX=8]")
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) error clicking '1st interview packet' using web function. error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-click_1st_packet_web.bmp", 1, 1)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) attempting click using ocr engine", crlf)
			endif
			pause 1
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) selected '1st interview packet", crlf)
			endif

			if res <> 0 then
				ret = useocrengine(3)
				usewindow(wndHomePage$, 1)
				result = clickontextocr("1st Interview Packet pdf", left, single, inarea(716, 448, 217, 26))
				'------- error handling
				if result <> 0 then
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) error clicking '1st interview packet' using ocr engine. error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) resuming scan for next change event", crlf + crlf)
					hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-click_1st_packet_ocr.bmp", 1, 1)
					write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) workflow failed; proceeding to next change event", crlf + crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - select 1st int packet", crlf + crlf)
					closebrowser()
					goto nextIteration
				endif
				'------- debug logging
				if ret = 0 then
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) selected '1st interview packet", crlf)
				endif
			endif


			'-------------------- click 'continue' button
			usepage(pgHomePage$)
			res = clickhtmlelement("BUTTON[INNERTEXT='Continue']")
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) error clicking 'continue' button. error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-1st_click_continue_button.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - 1st click continue", crlf + crlf)
				closebrowser()
				goto nextIteration
			endif
			'------- validation
			ret = useocrengine(3)
			pause 10 secs until
				textocr("Get documents signed")
				inwindow(wndHomePage$, 1)
				inarea(497, 178, 105, 679)
			pausefalse
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) click 'continue' button validation failed", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) expected text (get document signed) not found", crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-1st_click_continue_button.bmp", 1, 1)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) resuming scan for next change event", crlf + crlf)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - 1st click continue", crlf + crlf)
				closebrowser()
				goto nextIteration
			endpause
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) clicked 'continue' button", crlf)
			endif


			'-------------------- enter applicant email
			ret = useocrengine(3)
			usewindow(wndHomePage$, 1)
			if iEnvironment = 1 then
				clickontextocr("Enter recipient email", left, single, inarea(655, 358, 165, 21))
			endif
			if iEnvironment = 2 then
				clickontextocr("Enter recipient email", left, single, inarea(532, 313, 866, 53))
			endif
			res = sendkeys(applicantEmail$)
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) error entering applicant email", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-1st_enter_applicant_email.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - 1st enter applicant email", crlf + crlf)
				closebrowser()
				goto nextIteration
			endif
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) entered applicant email", crlf)
			endif


			'-------------------- add company email
			ret = useocrengine(3)
			usewindow("CHROME.EXE|Chrome_WidgetWin_1|Adobe Acrobat E-Sign - Google Chrome", 1)
			if iEnvironment = 1 then
				clickontextocr("Enter recipient email", left, single, inarea(645, 407, 166, 29))
			endif
			if iEnvironment = 2 then
				clickmouse(left, double, 665, 390, absolute)
			endif
			res = sendkeys(corpEmail$)
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) error entering corporate email", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-1st_enter_corporate_email.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - 1st enter corporate email", crlf + crlf)
				closebrowser()
				goto nextIteration
			endif
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) entered corporate email", crlf)
			endif


			'-------------------- add applicant name to message box
			ret = useocrengine(3)
			usewindow(wndHomePage$, 1)
			if iEnvironment = 1 then
				clickontextocr("Ist Interview", left, single, inarea(537, 572, 171, 33), -85, 0) 'offset to place cursor at beginning of text.
			endif
			if iEnvironment = 2 then
				clickmouse(left, down, 535, 560, absolute)
				clickmouse(left, up, 535, 560, absolute)
			endif
			res = sendkeys(applicantFName$ + " " + applicantLName$ + " ")
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) error adding applicant name to message box", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-1st_add_applicant_name.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - 1st add applicant name", crlf + crlf)
				closebrowser()
				goto nextIteration
			endif
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) added applicant name to message box", crlf)
			endif


			'-------------------- click 'next' button
			ret = useocrengine(3)
			usewindow("CHROME.EXE|Chrome_WidgetWin_1|Adobe Acrobat E-Sign - Google Chrome", 1)
			if iEnvironment = 1 then
				res = clickontextocr("ocd", left, single, inarea(496, 935, 149, 80))
				'------- error handling
				if res <> 0 then
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) error clicking 'next' button. error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) resuming scan for next change event", crlf + crlf)
					write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) workflow failed; proceeding to next change event", crlf + crlf)
					hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-1st_click_next.bmp", 1, 1)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - 1st click next", crlf + crlf)
					closebrowser()
					goto nextIteration
				endif
			endif
			if iEnvironment = 2 then
				clickmouse(left, double, 560, 940, absolute)
			endif
			pause 2
			'------- validation
			ret = useocrengine(3)
			pause 30 secs until
				textocr("Skills Assessment")
				inwindow(wndHomePage$, 1)
				inarea(526, 313, 151, 685)
			pausefalse
				result = useocrengine(3)
				var$ = captureocr$(wndHomePage$, topinstance())
				if instr(var$, "Email provided is invalid") <> 0 then
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) email provided is invalid; resuming scan for next change event", crlf + crlf)
					hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-1st_invalid_email.bmp", 1, 1)
					write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) workflow failed; proceeding to next change event", crlf + crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: 1st invalid email", crlf + crlf)
					closebrowser()
					goto nextIteration
				else
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) clicking 'next' button validation failed", crlf)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) expected text (Skills Assessment) not found", crlf)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) resuming scan for next change event", crlf + crlf)
					hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-1st_click_next_button.bmp", 1, 1)
					write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) workflow failed; proceeding to next change event", crlf + crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - 1st click next", crlf + crlf)
					closebrowser()
					goto nextIteration
				endif
			endpause
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) clicked 'next' button", crlf)
			endif


			'-------------------- click 'send' button
			ret = useocrengine(3)
			usewindow("CHROME.EXE|Chrome_WidgetWin_1|Adobe Acrobat E-Sign - Google Chrome", 1)
			if iEnvironment = 1 then
				res = clickontextocr("D>", left, single, inarea(1779, 933, 139, 76))
				'------- error handling
				if res <> 0 then
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) error clicking 'send' button", crlf)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) resuming scan for next change event", crlf + crlf)
					hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-1st_click_send_button.bmp", 1, 1)
					write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) workflow failed; proceeding to next change event", crlf + crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - 1st click send", crlf + crlf)
					closebrowser()
					goto nextIteration
				endif
			endif
			if iEnvironment = 2 then
				clickmouse(left, double, 1850, 970, absolute)
			endif			
			pause 2
			'------- validation
			ret = useocrengine(3)
			pause 20 secs until
				textocr(applicantFName$)
				inwindow(wndHomePage$, 1)
				inarea(568, 270, 148, 832)
			pausefalse
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) clicking 'send' button validation failed", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) expected text (send confirmation) not found", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-1st_click_send_button.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (1st) workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - 1st click send", crlf + crlf)
				closebrowser()
				goto nextIteration
			endpause
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": 1st interview packet sent", crlf + crlf)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": 1st Interview packet sent", crlf + crlf)
				write(successLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(successLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(successLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": 1st Interview packet sent", crlf + crlf)
			endif


			closebrowser()


			iFirstCompl = iFirstCompl + 1	'record processed counter


		endif	'end of 1st interview

		'----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 2nd interview

		if curr_stage$ = "2nd Interview" then

			iSecondCnt = iSecondCnt + 1

			write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": stage for change event is '2nd interview' triggering workflow", crlf)
			write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": change event for stage '2nd interview' at row: " + str$(iExcelRow) + " triggered workflow", crlf)
			write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": getting data from employment inquiry for current row", crlf)


			'-------------------- get data values for current record from employment inquiry
			applicantID$ = arrApplicantID$(i)
			applicantFName$ = arrApplicantFName$(i)
			applicantLName$ = arrApplicantLName$(i)
			applicantEmail$ = arrApplicantEmail$(i)
			adobePcktStatus$ = arrAdobePcktStatus$(i)
			write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
			write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
			write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": starting workflow for:" + applicantFName$ + " " + applicantLName$ + " record id: " + "[" + applicantID$ + "]", crlf)


			'-------------------- check for already sent packets
			write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": checking status of packets", crlf)
			write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": value of adobePcktStatus: " + adobePcktStatus$, crlf)
			if instr(adobePcktStatus$, "2nd Int Pkt") <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": status indicates packets have already been sent", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": skipping workflow for current record, resuming scan for next change event", crlf + crlf)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": adobe packets have been sent, proceeding to next change event", crlf + crlf)
				goto nextIteration
			endif


			'-------------------- invoke browser window
			if invokeBrowser("CH", adobeURL$) <> 0 then
				nextScript()
				goto nextIteration
			endif


			'-------------------- check for login page
			if existhtmlelement("INPUT EMAIL[NAME='username', ID='EmailPage-EmailField']") = 1 then	
				usepage("Adobe ID")
				writehtml("INPUT EMAIL[NAME='username']", adobeUsername$)
				writehtml("INPUT TEXT[NAME='password']", adobePassword$)
				clickhtmlelement("SPAN[OUTERTEXT='Continue']")
				pause 3
				if currentpage$() <> pgHomePage$ then
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error logging in. browser not loaded to expected page", crlf)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": expected: 'Adobe Acrobat Home' actual: " + currentpage$(), crlf)
					hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-login_error.bmp", 1, 1)
					closebrowser()
					nextScript()
					goto nextIteration
				else
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": browser invoked and log in successfull", crlf)
				endif
			endif


			'-------------------------------------------------------------------------------------------------------------------------------- send 2nd interview packet
			if currentpage$() = pgHomePage$ then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": browser invoked. account already logged in", crlf)
			endif


			'-------------------- click 'tools' link in upper-left of main frame
			usepage(pgHomePage$)
			res = clickhtmlelement(lnkTools)
			pause 3					
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error clicking 'tools' link. error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - click tools", crlf + crlf)
				closebrowser()
				goto nextIteration
			endif
			'------- validation
			ret = useocrengine(3)
			pause 10 secs until
				textocr("Request e-signatures")
				inwindow(wndHomePage$, 1)
				inarea(529, 374, 189, 281)
			pausefalse
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": clicking 'tools' link validation failed", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": expected element text (request signatures) not found", crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-click_tools_link.bmp", 1, 1)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - click tools", crlf + crlf)
				goto nextIteration
			endpause
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": clicked 'tools' link", crlf)
			endif


			'-------------------- click 'request signatures' box in tools carousel menu
			usepage(pgHomePage$)
			res = clickhtmlelement("DIV[OUTERTEXT='Request', INDEX=3]")
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error clicking 'request signatures'. error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-click_request_signatures.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - click request signatures", crlf + crlf)
				closebrowser()
				goto nextIteration
			endif
			'------- validation
			usepage(pgHomePage$)
			ret = existhtmlelement("DIV[OUTERTEXT='Request e-signaturesRecentDocumentsMy', INDEX=2]")
			if ret = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": clicking 'request signatures' link validation failed", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": expected element (file select popup) not found.", crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-click_request_signatures.bmp", 1, 1)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - click request signatures", crlf + crlf)
				closebrowser()
				goto nextIteration
			endif
			'------- debug logging
			if ret = 1 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": clicked 'request signatures' link", crlf)
			endif


			'-------------------- click 'documents' in top menu of request signatures popup
			usepage(pgHomePage$)
			res = clickhtmlelement("SPAN[OUTERTEXT='Documents', INDEX=3]")
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error clicking 'documents' link. error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-click_documents_link.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - click documents", crlf + crlf)
				closebrowser()
				goto nextIteration
			endif
			'------- validation
			ret = useocrengine(3)
			pause 10 secs until
				textocr("Automated")
				inwindow(wndHomePage$, 1)
				inarea(611, 437, 337, 714)
			pausefalse
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": clicking 'documents' link validation failed", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": expected element (automated folder) not found", crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-click_documents_link.bmp", 1, 1)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - click documents", crlf + crlf)
				closebrowser()
				goto nextIteration
			endpause
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": clicked 'documents' link", crlf)
			endif


			'-------------------- click 'automated' folder
			usepage(pgHomePage$)
			res = clickhtmlelement("DIV[OUTERTEXT='Auto', INDEX=9]")
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error clicking 'automated' folder. error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-click_automated_folder.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - click automated", crlf + crlf)
				closebrowser()
				goto nextIteration
			endif
			'------- validation
			ret = useocrengine(3)
			if iEnvironment = 1 then
				pause 10 secs until
					textocr("Employee Forms")
					inwindow(wndHomePage$, 1)
					inarea(611, 437, 337, 714)
				pausefalse
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": clicking 'automated' folder validation failed", crlf)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": expected element (employee forms folder) not found", crlf)
					hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-click_automated_folder.bmp", 1, 1)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
					write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed; proceeding to next change event", crlf + crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - click automated", crlf + crlf)
					closebrowser()
					goto nextIteration
				endpause
			endif
			if iEnvironment = 2 then
				pause 10 secs until
					textocr("Employee Forms")
					inwindow(wndHomePage$, 1)
					inarea(605, 583, 71, 523)
				pausefalse
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": clicking 'automated' folder validation failed", crlf)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": expected element (employee forms folder) not found", crlf)
					hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-click_automated_folder.bmp", 1, 1)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
					write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed; proceeding to next change event", crlf + crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - click automated", crlf + crlf)
					closebrowser()
					goto nextIteration
				endpause
			endif
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": clicked 'automated' folder", crlf)
			endif


			'-------------------- click 'employee forms' folder
			usepage(pgHomePage$)
			res = clickhtmlelement("DIV[CONTENT='EmployeEmployee']")
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error clicking 'employee forms' folder. error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-click_employee_forms_folder.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - click employee forms", crlf + crlf)
				closebrowser()
				goto nextIteration
			endif
			'------- validation
			ret = useocrengine(3)
			pause 10 secs until
				textocr("Applicant to New Hire")
				inwindow(wndHomePage$, 1)
				inarea(611, 437, 337, 714)
			pausefalse
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": clicking 'employee forms' folder validation failed", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": expected element (applicant to new hire folder) not found", crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-click_employee_forms_folder.bmp", 1, 1)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - click employee forms", crlf + crlf)
				closebrowser()
				goto nextIteration
			endpause
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": clicked 'employee forms' folder", crlf)
			endif


			'-------------------- click 'applicant to new hire forms' folder
			ret = useocrengine(3)
			usewindow(wndHomePage$, 1)
			if iEnvironment = 1 then
				res = clickontextocr("Applicant to New Hire", left, single, inarea(641, 581, 628, 73))
			endif
			if iEnvironment = 2 then
				clickmouse(left, double, 780, 630, absolute)
			endif
			pause 5
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error clicking 'applicant to new hire' folder. error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-applicant_to_new_hire_forms_folder.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - click applicant to new hire forms", crlf + crlf)
				closebrowser()
				goto nextIteration
			endif
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": clicked 'applicant to new hire' folder", crlf)
			endif


			'-------------------- click '2nd interview packet.pdf'
			ret = useocrengine(3)
			UseWindow(wndHomePage$, 1)
			res = clickOnTextOCR("2nd Interview Packet", left, single, inarea(600, 455, 712, 214))
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error clicking '2nd interview' packet. error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-sel_2nd_interview_packet.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - select 2nd interview packet", crlf + crlf)
				closebrowser()
				goto nextIteration
			endif
			pause 2
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": clicked '2nd interview' packet", crlf)
			endif


			'-------------------- click 'continue' button
			usepage(pgHomePage$)
			res = clickhtmlelement("BUTTON[INNERTEXT='Continue']")
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error clicking 'continue' button. error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-click_continue_button.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - 1st click continue", crlf + crlf)
				closebrowser()
				goto nextIteration
			endif
			'------- validation
			ret = useocrengine(3)
			pause 10 secs until
				textocr("Get documents signed")
				inwindow(wndHomePage$, 1)
				inarea(497, 178, 105, 679)
			pausefalse
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": click 'continue' button validation failed", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": expected text (get document signed) not found", crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-click_continue_button.bmp", 1, 1)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - click continue", crlf + crlf)
				closebrowser()
				goto nextIteration
			endpause
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": clicked 'continue' button", crlf)
			endif


			'-------------------- enter applicant email
			ret = useocrengine(3)
			usewindow(wndHomePage$, 1)
			if iEnvironment = 1 then
				clickontextocr("Enter recipient email", left, single, inarea(655, 358, 165, 21))
			endif
			if iEnvironment = 2 then
				clickontextocr("Enter recipient email", left, single, inarea(532, 313, 866, 53))
			endif
			res = sendkeys(applicantEmail$)
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error entering applicant email", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-enter_applicant_email.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - enter applicant email", crlf + crlf)
				closebrowser()
				goto nextIteration
			endif
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": entered applicant email", crlf)
			endif


			'-------------------- add company email
			ret = useocrengine(3)
			usewindow("CHROME.EXE|Chrome_WidgetWin_1|Adobe Acrobat E-Sign - Google Chrome", 1)
			if iEnvironment = 1 then
				clickontextocr("Enter recipient email", left, single, inarea(645, 407, 166, 29))
			endif
			if iEnvironment = 2 then
				clickmouse(left, double, 665, 390, absolute)
			endif
			res = sendkeys(corpEmail$)
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error entering corporate email", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-enter_corporate_email.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - enter corporate email", crlf + crlf)
				closebrowser()
				goto nextIteration
			endif
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": entered corporate email", crlf)
			endif


			'-------------------- add applicant name to message box
			ret = useocrengine(3)
			usewindow(wndHomePage$, 1)
			if iEnvironment = 1 then
				clickontextocr("2nd", left, single, inarea(529, 575, 177, 32), -85, 0) 'offset to place cursor at beginning of text.
			endif
			if iEnvironment = 2 then
				clickmouse(left, down, 535, 560, absolute)
				clickmouse(left, up, 535, 560, absolute)
			endif
			res = sendkeys(applicantFName$ + " " + applicantLName$ + " ")
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error adding applicant name to message box", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-add_applicant_name.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - add applicant name", crlf + crlf)
				closebrowser()
				goto nextIteration
			endif
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": added applicant name to message box", crlf)
			endif


			'-------------------- click 'next' button
			ret = useocrengine(3)
			usewindow("CHROME.EXE|Chrome_WidgetWin_1|Adobe Acrobat E-Sign - Google Chrome", 1)
			if iEnvironment = 1 then
				res = clickontextocr("ocd", left, single, inarea(496, 935, 149, 80))
				'------- error handling
				if res <> 0 then
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error clicking 'next' button", crlf)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
					hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-click_next.bmp", 1, 1)
					write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed; proceeding to next change event", crlf + crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - click next", crlf + crlf)
					closebrowser()
					goto nextIteration
				endif
			endif
			if iEnvironment = 2 then
				clickmouse(left, double, 560, 940, absolute)
			endif
			pause 2
			'------- validation
			ret = useocrengine(3)
			pause 30 secs until
				textocr("Interviewee Name")
				inwindow(wndHomePage$, 1)
				inarea(452, 359, 182, 814)
			pausefalse
				result = useocrengine(3)
				var$ = captureocr$(wndHomePage$, topinstance())
				if instr(var$, "Email provided is invalid") <> 0 then
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": email provided is invalid; resuming scan for next change event", crlf + crlf)
					hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-invalid_email.bmp", 1, 1)
					write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed; proceeding to next change event", crlf + crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: invalid email", crlf + crlf)
					closebrowser()
					goto nextIteration
				else
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": clicking 'next' button validation failed", crlf)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": expected text (Interviewee Name) not found", crlf)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
					hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-click_next_button.bmp", 1, 1)
					write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed; proceeding to next change event", crlf + crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - click next", crlf + crlf)
					closebrowser()
					goto nextIteration
				endif
			endpause
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": clicked 'next' button", crlf)
			endif


			'-------------------- click 'send' button
			ret = useocrengine(3)
			usewindow("CHROME.EXE|Chrome_WidgetWin_1|Adobe Acrobat E-Sign - Google Chrome",1)
			if iEnvironment = 1 then
				res = clickontextocr("D>", left, single, inarea(1779, 933, 139, 76))
				'------- error handling
				if res <> 0 then
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error clicking 'send' button", crlf)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
					hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-click_send_button.bmp", 1, 1)
					write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed; proceeding to next change event", crlf + crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - click send", crlf + crlf)
					closebrowser()
					goto nextIteration
				endif
			endif
			if iEnvironment = 2 then
				clickmouse(left, double, 1850, 970, absolute)
			endif			
			pause 2
			'------- validation
			ret = useocrengine(3)
			pause 20 secs until
				textocr(applicantFName$)
				inwindow(wndHomePage$, 1)
				inarea(568, 270, 148, 832)
			pausefalse
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": clicking 'send' button validation failed", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": expected text (send confirmation) not found", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-click_send_button.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - click send", crlf + crlf)
				closebrowser()
				goto nextIteration
			endpause
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": 2nd interview packet sent", crlf + crlf)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": 2nd Interview packet sent", crlf + crlf)
				write(successLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(successLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(successLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": 2nd Interview packet sent", crlf + crlf)
			endif


			iSecondCompl = iSecondCompl + 1		'counter for records packets sent


			usepage(pgHomePage$)
			closebrowser()


		endif	'end of 2nd interview


		if curr_stage$ <> "1st Interview" and curr_stage$ <> "2nd Interview" then
			write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": status for change event at row: (" + str$(iExcelRow) + ") did not trigger workflow", crlf)
			write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
		endif


	endif	'end of change event if


nextIteration:


i = i + 1


until i = 5000	'iterate through all rows in array


'#############################################################################################################################
'##   												end	script										 						##
'#############################################################################################################################
write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow scan completed", crlf)
write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": change events detected:                    " + str$(iEventCnt), crlf)
write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": change events with '1st interview' stage:  " + str$(iFirstCnt), crlf)
write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": 1st interview packets sent:                " + str$(iFirstCompl), crlf)
write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": change events with '2nd interview' stage:  " + str$(iSecondCnt), crlf)
write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": 2nd interview packets sent:                " + str$(iSecondCompl), crlf)
write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow scan completed", crlf)
write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": change event rows detected:                " + str$(iEventCnt), crlf)
write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": events with '1st interview' stage:         " + str$(iFirstCnt), crlf)
write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": 1st interview packets sent:                " + str$(iFirstCompl), crlf)
write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": change events with '2nd interview' stage:  " + str$(iSecondCnt), crlf)
write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": 2nd interview packets sent:                " + str$(iSecondCompl), crlf)
write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": ------------------------------------------------------", crlf + crlf)
write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": ------------------------------------------------------", crlf + crlf)
write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": ------------------------------------------------------", crlf + crlf)
write(successLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": ------------------------------------------------------", crlf + crlf)

