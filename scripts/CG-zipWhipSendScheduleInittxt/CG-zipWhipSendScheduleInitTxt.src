'#############################################################################################################################
'## author:                 todd busch
'##
'## date:                   12/11/2022
'##
'## description:            iterates wintask change even col in employment inquiry list.xlsx in package downloads folder,
'##							for rows flagged with 'yes' if stage is '1st interview' a new contact is created, an initial
'##							greeting text is sent and a day before and day of appt confirmation texts are scheduled
'##
'## run in:					firefox
'##
'## notes:                  day before confirm is skipped if current day is the day before; enhancement logged that needs
'##							prioritized when main development is complete to change search to use phone num instead of
'##							applicant name to ensure the most recent is used when multiple records for same person
'##
'#############################################################################################################################

'#############################################################################################################################
'##   													script prep									 						##
'#############################################################################################################################
include "C:\v-angels-automation\framework\CG-globalDimDeclarations\CG-globalDimDeclarations.src"
include "C:\v-angels-automation\framework\VA-globalWebFunctions\VA-globalWebFunctions.src"
include "C:\v-angels-automation\framework\CG-globalFunctions\CG-globalFunctions.src"
include "C:\v-angels-automation\framework\CG-globalSubDefinitions\CG-globalSubDefinitions.src"
include "C:\v-angels-automation\framework\CG-globalVariables\CG-globalVariables.src"


currScript$ = "CG-zipWhipSendScheduleinitTxt"


#ignoreerrors = 1					'turn off errors


OnAction error
dosub Process_Error
endaction


iRetry = 0
iAttempt = 0


'-------------------------------------------------------------------------------------------------------------------------------- read in columns from employment inquiry doc
'-------------------- record id
cnt = readexcel (employmentInquiryPath$, employmentInquiryIdCol$, arrApplicantID$())
if instr(str$(cnt), "-") <> 0 then				'look for dash which would indicate an error code
	write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error reading ID column.  error_code: (" + str$(cnt) + ")", crlf)
	write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": scan failed reading in data (id column)", crlf)
	criticalStop()
else
	write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": (" + str$(cnt) + ") rows read into array.", crlf)
endif
'-------------------- applicant first name
res = readexcel (employmentInquiryPath$, employmentInquiryFNameCol$, arrApplicantFName$())	
if instr(str$(res), "-") <> 0 then
	write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error reading first name column.  error_code: (" + str$(cnt) + ")", crlf)
	write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": scan failed reading in data (applicant first name)", crlf)
	criticalStop()
endif
'-------------------- applicant last name
res = readexcel (employmentInquiryPath$, employmentInquiryLNameCol$, arrApplicantLName$())	
if instr(str$(res), "-") <> 0 then
	write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error reading last name column.  error_code: (" + str$(cnt) + ")", crlf)
	write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": scan failed reading in data (applicant last name)", crlf)
	criticalStop()
endif
'-------------------- email
res = readexcel (employmentInquiryPath$, employmentInquiryEmailCol$, arrApplicantEmail$())	
if instr(str$(res), "-") <> 0 then
	write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error reading email column.  error_code: (" + str$(cnt) + ")", crlf)
	write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": scan failed reading in data (applicant email)", crlf)
	criticalStop()
endif
'-------------------- stage
res = readexcel (employmentInquiryPath$, employmentInquiryStageCol$, arrCurrentStage$())
if instr(str$(res), "-") <> 0 then
	write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error reading stage column.  error_code: (" + str$(cnt) + ")", crlf)
	write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": scan failed reading in data (stage)", crlf)
	criticalStop()
endif
'-------------------- change events
res = readexcel (employmentInquiryPath$, employmentInquiryChangeEventCol$, arrChangeEvents$())
if instr(str$(res), "-") <> 0 then
	write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error reading change events column.  error_code: (" + str$(cnt) + ")", crlf)
	write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": scan failed reading in data (change events)", crlf)
	criticalStop()
endif
'-------------------- phone
res = readexcel (employmentInquiryPath$, employmentInquiryPhoneCol$, arrApplicantPhone$())
if instr(str$(res), "-") <> 0 then
	write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error reading phone column.  error_code: (" + str$(cnt) + ")", crlf)
	write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": scan failed reading in data (phone)", crlf)
	criticalStop()
endif
'-------------------- 1st interview appointment
res = readexcel (employmentInquiryPath$, employmentInquiry1stAppCol$, arrApplicant1stApp$())
if instr(str$(res), "-") <> 0 then
	write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error reading 1st interview appointment column.  error_code: (" + str$(cnt) + ")", crlf)
	write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": scan failed reading in data (1st interview appointment)", crlf)
	criticalStop()
endif
'-------------------- text messages
res = readexcel (employmentInquiryPath$, employmentInquiryTextmsgCol$, arrTextmsgStatus$())
if instr(str$(res), "-") <> 0 then
	write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error reading text messages column.  error_code: (" + str$(cnt) + ")", crlf)
	write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": scan failed reading in data (text messages)", crlf)
	criticalStop()
endif


'#############################################################################################################################
'##   													script start								 						##
'#############################################################################################################################

write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": starting scan for zipwhip change events", crlf)
write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": starting scan of (" + str$(cnt) + ") rows for zipwhip change events", crlf)
write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": starting scan of (" + str$(cnt) + ") rows for zipwhip change events", crlf)
write(successLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": starting scan of (" + str$(cnt) + ") rows for zipwhip change events", crlf)
if iEnvironment = 1 then
	write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": using settings for environment 1", crlf)
	write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": --------------------------------------------------------", crlf)
endif
if iEnvironment = 2 then
	write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": using settings for environment 2", crlf)
	write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": --------------------------------------------------------", crlf)
endif


'-------------------------------------------------------------------------------------------------------------------------------- begin iterating through change event column
i = 0


repeat


	'-------------------- get change event status for current row
	curr_status$ = arrChangeEvents$(i)


	if curr_status$ = "Yes" then


		iChangeCnt = iChangeCnt + 1				'change event counter
		iExcelRow = i + 2						'row in employment inquiry doc (add 1 for header and 1 for zero indexed arrays)
		write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": change event found at row: [" + str$(iExcelRow) + "]", crlf)


		'-------------------- get stage of current change event
		curr_stage$ = arrCurrentStage$(i)


		'------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ 1st interview 
		if curr_stage$ = "1st Interview" then
			iStageCnt = iStageCnt + 1			'stage counter
			write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": stage for change event is '1st Interview' triggering workflow", crlf)
			write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": change event for stage '1st Interview' at row: " + str$(iExcelRow) + " triggered workflow", crlf)
			write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": getting data from employment inquiry for current row", crlf)


			'-------------------- get data values for current record from employment inquiry
			applicantID$ = arrApplicantID$(i)
			applicantFName$ = arrApplicantFName$(i)
			applicantLName$ = arrApplicantLName$(i)
			applicantEmail$ = arrApplicantEmail$(i)
			applicantPhone$ = arrApplicantPhone$(i)
			applicant1stApp$ = arrApplicant1stApp$(i)
			textmsgStatus$ = arrTextmsgStatus$(i)
			currentStage$ = arrCurrentStage$ (i)
			applicantFullName$ = applicantFName$ + " " + applicantLName$
			write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
			write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
			write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": starting workflow for record id: " + "(" + applicantID$ + ") " + applicantFName$ + " " + applicantLName$, crlf)


			'-------------------- check for non-standard formatted phone number
			l = instr(applicantPhone$, "[tel:")
			if l <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant phone is in non-standard format: '" + applicantPhone$ + "'", crlf)
				applicantPhone$ = Left$(applicantPhone$, l - 1)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": reformatted applicant phone: " + applicantPhone$, crlf)
			endif


			'-------------------- check for no phone number
			if applicantPhone$ = "" then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": phone field is blank", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": phone field was blank; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: no phone number", crlf + crlf)
				goto nextIteration
			endif


			'-------------------- check for scheduled appointment
			if applicant1stApp$ = "" then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant does not have a scheduled 1st interview", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": no 1st interview scheduled; proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: no 1st interview scheduled", crlf + crlf)
				goto nextIteration
			endif


			'----------------------------------------------------------- format needed 1st appointment dates and times
			'-------------------------------------------------- dates
			'-------------------- dissect first app date
			'------- month
			r = instrrev(applicant1stApp$, "/")							'find second "/" in string
			r = r + 4													'add 4 for year to find end of date
			firstAppDateOnly$ = left$(applicant1stApp$, r)				'extract just date

			firstAppDateOnly$ = rtrim$(firstAppDateOnly$)				'trim whitespace caused by single digit month/day values

			firstAppMonth$ = left$(applicant1stApp$, 2)					'extract just month

			if instr(firstAppMonth$,"/") <> 0 then						'zero pad if single digit
				firstAppMonth$ = left$(firstAppMonth$, 1) 
				firstAppMonth$ = "0" + firstAppMonth$
			endif

			'------- day
			p = instr(applicant1stApp$, "/")							'find starting point to extract day
			firstAppDay$ = mid$(applicant1stApp$, p + 1, 2)				'extract just day

			if instr(firstAppDay$,"/") <> 0 then						'zero pad if single digit
				firstAppDay$ = left$(firstAppDay$, 1) 
				firstAppDay$ = "0" + firstAppDay$
			endif

			'------- year
			firstAppYr$ = right$(firstAppDateOnly$, 4)					'extract just year

			'------- day prior
			firstAppPriorDay = Val(firstAppDay$) - 1					'subtract day from appt day

			firstAppPriorDay$ = str$(firstAppPriorDay)					'convert to string value

			l = len(firstAppPriorDay$)									'zero pad if single digit
			if l < 2 then
				firstAppPriorDay$ = "0" + firstAppPriorDay$
			endif

			'-------------------- assemble needed dates
			firstAppDate$ = firstAppMonth$ + "/" + firstAppDay$ + "/" + firstAppYr$
			firstAppPriorDate$ = firstAppMonth$ + "/" + firstAppPriorDay$ + "/" + firstAppYr$
			

			'-------------------------------------------------- times
			firstAppLongTime$ = right$(applicant1stApp$, 11)			'extract just time (w/am-pm)

			dayNightDes$ = right$(firstAppLongTime$, 2)					'extract am/pm designator

			firstAppTimeNoSecs$ = left$(firstAppLongTime$, 5)			'extract time minus secs

			firstAppTimeNoSecs$ = ltrim$(firstAppTimeNoSecs$)			'trim whitespace caused by single hour values

			firstAppHour$ = left$(firstAppTimeNoSecs$, 2)				'extract just hour

			if instr(firstAppHour$,":") <> 0 then						'zero pad if single digit
				firstAppHour$ = left$(firstAppHour$, 1) 
				firstAppHour$ = "0" + firstAppHour$
			endif

			firstAppMinutes$ = right$(firstAppTimeNoSecs$, 2)			'extract just hour

			firstAppTime$ = firstAppTimeNoSecs$ + dayNightDes$


			'-------------------------------------------------- get day from current date for prior day = today check
			sCurrDay$ = day$()


			'-------------------- check for already sent messages
			write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": checking status of text msg column", crlf)
			if textmsgStatus$ <> "" then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": text messages were previously sent", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": messages already sent, proceeding to next change event", crlf + crlf)
				goto nextIteration
			endif


			'-------------------- invoke browser
			ret = startbrowser("FF", zipWhipURL$, 3)
			maximizewindow("FIREFOX.EXE|MozillaWindowClass|", 1)
			if ret <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error invoking browser", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error_code: (" + str$(ret) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-invoke_browser.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - browser invoke", crlf + crlf)
				closebrowser()
				goto nextIteration
			endif


			'-------------------- check for and handle login page
			ret = existw("FIREFOX.EXE|MozillaWindowClass|Zipwhip - Login � Mozilla Firefox", 1)
			if ret = 1 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": account was not logged in", crlf)
				'check for object indicating a 'remembered user' has been pre-filled
				usepage("Zipwhip - Login")
				res = existhtmlelement("DIV[DATA-TESTID='EXISTING_IDENTITY']")
				'log in steps for remembered user
				if res = 1 then
					usepage("Zipwhip - Login")
					clickhtmlelement("DIV[OUTERTEXT='Next']")
					writehtml("INPUT PASSWORD[NAME='password']", zipWhipPassword$)
					clickhtmlelement("BUTTON[INNERTEXT='Log In']")
				endif
				'log in steps for empty user
				if res  = 0 then
					usepage("Zipwhip - Login")
					writehtml("INPUT TEXT[NAME='identity']", zipWhipUsername$)
					clickhtmlelement("DIV[OUTERTEXT='Next']")
					writehtml("INPUT PASSWORD[NAME='password']", zipWhipPassword$)
					clickhtmlelement("DIV[OUTERTEXT='Log', INDEX=7]")
				endif
				'------- validation
				res$ = currentpage$()
				if res$ <> "Zipwhip | Daniel Nelson" then
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": issue logging in. current page = (" + res$ + ").", crlf)
					hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-login_error.bmp", 1, 1)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
					write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - log in", crlf + crlf)
					closebrowser()
					goto nextIteration
				endif
				'------- debug logging
				if res$ = "Zipwhip | Daniel Nelson" then
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": browser invoked. log in was successful", crlf)
				endif
			endif


			'-------------------------------------------------------------------------------------------------------------------------------- create contact
			'-------------------- invoke browser
			res$ = currentpage$()
			if res$ = "Zipwhip | Daniel Nelson" then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": browser invoked. account already logged in", crlf)
			endif


			'-------------------- click 'contacts' icon
			usepage("Zipwhip | Daniel Nelson")
			res = clickhtmlelement("BUTTON[CLASS='zk-button zk-button-transparent z', INDEX=3]")
			pause 2
			'-------error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error clicking 'contact' icon", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-click_contacts_icon.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - click contacts", crlf + crlf)
			closebrowser()
				goto nextIteration
			endif
			'------- validation
			if iEnvironment = 1 then
				ret = useocrengine(3)
				pause 10 secs until
					textocr("Contacts")
					inwindow("FIREFOX.EXE|MozillaWindowClass|Zipwhip | Daniel Nelson � Mozilla Firefox", 1)
					inarea(574, 136, 51, 155)
				pausefalse
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": clicking 'contact' icon validation failed", crlf)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": expected element (header text) not found.", crlf)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
					hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-click_contacts_icon.bmp", 1, 1)
					write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - click contacts", crlf + crlf)
					closebrowser()
					goto nextIteration
				endpause
			endif
			if iEnvironment = 2 then
				ret = useocrengine(3)
				pause 10 secs until
					textocr("Contacts")
					inwindow("FIREFOX.EXE|MozillaWindowClass|Zipwhip | Daniel Nelson � Mozilla Firefox", 1)
					inarea(438, 143, 71, 321)
				pausefalse
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": clicking 'contact' icon validation failed", crlf)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": expected element (header text) not found.", crlf)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
					hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-click_contacts_icon.bmp", 1, 1)
					write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - click contacts", crlf + crlf)
					closebrowser()
					goto nextIteration
				endpause
			endif
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": clicked 'contact' icon", crlf)
			endif
				

			'-------------------- click 'add contact' button
			res = clickhtmlelement("DIV[OUTERTEXT='Add']")
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error clicking 'add' icon", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-click_add_contact_button.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - click add contact", crlf + crlf)
				closebrowser()
				goto nextIteration
			endif
			'------- validation
			if iEnvironment = 1 then
				ret = useocrengine(3)
				pause 10 secs until
					textocr("Add Contact")
					inwindow("FIREFOX.EXE|MozillaWindowClass|Zipwhip | Daniel Nelson � Mozilla Firefox", 1)
					inarea(770, 187, 42, 223)
				pausefalse
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": clicking 'add contact' icon validation failed", crlf)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": expected element (header text) not found.", crlf)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
					hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-click_add_contact.bmp", 1, 1)
					write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - click add contact", crlf + crlf)
					closebrowser()
					goto nextIteration
				endpause
			endif
			if iEnvironment = 2 then
				ret = useocrengine(3)
				pause 10 secs until
					textocr("Add Contact")
					inwindow("FIREFOX.EXE|MozillaWindowClass|Zipwhip | Daniel Nelson � Mozilla Firefox", 1)
					inarea(717, 220, 53, 343)
				pausefalse
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": clicking 'add contact' icon validation failed", crlf)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": expected element (header text) not found.", crlf)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
					hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-click_add_contact.bmp", 1, 1)
					write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - click add contact", crlf + crlf)
					closebrowser()
					goto nextIteration
				endpause
			endif
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": clicked 'add contact' icon", crlf)
			endif
				

			'-------------------- enter applicant first name
			res = writehtml("INPUT TEXT[NAME='firstName']", applicantFName$)
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error entering 'first name'", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-enter_first_name.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - enter first name", crlf + crlf)
				closebrowser()
				goto nextIteration
			endif
			'------- validation
			ret = gethtmledittext("INPUT TEXT[NAME='firstName',LABEL='First Name']", var$)
			if ret <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error getting text to validate first name entry", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-enter_first_name.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - enter first name", crlf + crlf)
				closebrowser()
				goto nextIteration
			endif
			if ret = 0 then
				if var$ <> applicantFName$ then
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": validation failed; expected did not match actual", crlf)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": actual: (" + var$ + ")   expected: (" + applicantFName$ + ")", crlf)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
					hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-enter_first_name.bmp", 1, 1)
					write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - enter first name", crlf + crlf)
					closebrowser()
					goto nextIteration
				endif
			endif
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": entered applicant first name: " + applicantFName$, crlf)
			endif


			'-------------------- enter applicant last name
			res = writehtml("INPUT TEXT[NAME='lastName']", applicantLName$)
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error entering 'last name'", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-enter_last_name.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - enter last name", crlf + crlf)
			closebrowser()
				goto nextIteration
			endif
			'------- validation
			ret = gethtmledittext("INPUT TEXT[NAME='lastName']", var$)
			if ret <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error getting text to validate last name entry", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-enter_last_name.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - enter last name", crlf + crlf)
				closebrowser()
				goto nextIteration
			endif
			if ret = 0 then
				if var$ <> applicantLName$ then
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": validation failed; expected did not match actual", crlf)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": actual: (" + var$ + ")   expected: (" + applicantLName$ + ")", crlf)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
					hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-enter_last_name.bmp", 1, 1)
					write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - enter last name", crlf + crlf)
					closebrowser()
					goto nextIteration
				endif
			endif
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": entered applicant last name: " + applicantLName$, crlf)
			endif


			'-------------------- enter applicant phone number
			res = writehtml("INPUT TEXT[NAME='phoneNumber']", applicantPhone$)
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error entering 'phone'", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-enter_phone_number.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - enter phone", crlf + crlf)
				closebrowser()
				goto nextIteration
			endif
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": entered applicant phone number: " + applicantPhone$, crlf)
			endif


			'-------------------- enter notes
			res = writehtml("TEXTAREA[NAME='notes']", "Created by WinTask.")
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error entering 'notes'", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-enter_notes.bmp", 1, 1)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": notes not critical; continuing script execution", crlf)
			endif
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": entered notes", crlf)
			endif


			'-------------------- expand form to expose additional fields
			res = clickhtmlelement("DIV[OUTERTEXT='More']")
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error clicking 'more' to expand fields", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-click_expand_link.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - expand form", crlf + crlf)
				closebrowser()
				goto nextIteration
			endif
			'------- validation
			usepage("Zipwhip | Daniel Nelson")
			ret = existhtmlelement("INPUT TEXT[NAME='email']")
			if ret <> 1 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": clicking 'more' link validation failed", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": expected html element (email inputbox) not found.", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-click_more_hyperlink.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - expand form", crlf + crlf)
				closebrowser()
				goto nextIteration
			endif
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": clicked 'more' link to expand fields", crlf)
			endif


			'-------------------- enter applicant email
			res = writehtml("INPUT TEXT[NAME='email']", applicantEmail$)
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error entering 'email'", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-enter_email.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - enter email", crlf + crlf)
				closebrowser()
				goto nextIteration
			Endif
			'------- validation
			ret = gethtmledittext("INPUT TEXT[NAME='email']", var$)
			if ret <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error getting text to validate email entry", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-enter_email.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - enter email", crlf + crlf)
				closebrowser()
				goto nextIteration
			endif
			if ret = 0 then
				if var$ <> applicantEmail$ then
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": enter email validation failed; actual did not match expected", crlf)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": actual: " + var$ + "expected: " + applicantEmail$, crlf)
					write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
					hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-enter_email.bmp", 1, 1)
					write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
					write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - enter email", crlf + crlf)
					closebrowser()
					goto nextIteration
				endif
			endif
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": entered applicant email: " + applicantEmail$, crlf)
			endif


			'-------------------- click save button
			res = clickhtmlelement("DIV[OUTERTEXT='Save']")
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error clicking 'save'", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-click_save_contact.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - save contact", crlf + crlf)
				closebrowser()
				goto nextIteration
			Endif
			'------- validation
			res = existhtmlelement("DIV[OUTERTEXT='" + applicantFName$ + " " + applicantLName$ + "',INDEX=7]")
			if res <> 1 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": save contact failed. expected element (contact card) not found.", crlf)
				ret = capturehtml("DIV[OUTERTEXT='Add ContactFirst',INDEX=7]", captured_string$)
				if ret = 0 then
					result_string$ = extractbetween$(captured_string$, "Number", excluded, "Company", excluded)
						if result_string$ = "Invalid Phone Number" then
							write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": phone number is invalid", crlf)
							write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
							write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": phone number is invalid; proceeding to next change event", crlf + crlf)
							write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
							write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
							write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: invalid phone number", crlf + crlf)
							closebrowser()
							goto nextIteration
						endif
						if result_string$ = "Contact already exists" then
							write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": contact already exists", crlf)
							write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
							write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": contact already exists; proceeding to next change event", crlf + crlf)
							write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
							write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
							write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: duplicate contact", crlf + crlf)
							closebrowser()
							goto nextIteration
						endif
				endif
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-click_save_contact.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - save contact", crlf + crlf)	
			endif
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": contact saved successfully", crlf)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": contact saved successfully", crlf)
			endif


			'-------------------- close contact card
			usewindow("FIREFOX.EXE|MozillaWindowClass|Zipwhip | Daniel Nelson � Mozilla Firefox", 1)
			clickmouse(Left, Double, 515, 515, absolute)


			'-------------------------------------------------------------------------------------------------------------------------------- send initial text message
			'-------------------- navigate to conversations
			usepage("Zipwhip | Daniel Nelson")
			res = clickhtmlelement("BUTTON[CLASS='zk-button zk-button-transparent z']")
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error clicking 'conversations' icon", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-click-conversations_icon.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - click conversations", crlf + crlf)
				closebrowser()
				goto nextIteration
			Endif
			'------- validation
			pause 10 secs until
				bitmap(imagePath$ + "zipwhip-conversationsPageIcon.bmp")
				inwindow("FIREFOX.EXE|MozillaWindowClass|Zipwhip | Daniel Nelson � Mozilla Firefox", 1)
			pausefalse
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": clicking 'conversations' validation failed", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": clicking 'expected element (bitmap) not found.", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-click_conversations_icon.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - click conversations", crlf + crlf)
				closebrowser()
				goto nextIteration
			endpause
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": clicked 'conversations' icon", crlf)
			endif


			'-------------------- enter applicant name as search criteria
			usepage("Zipwhip | Daniel Nelson")
			res = writehtml("INPUT TEXT[NAME='contactSearch']", applicantFName$ + " " + applicantLName$)
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error entering 'search criteria'", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-enter_search_criteria.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - enter search criteria", crlf + crlf)
				closebrowser()
				goto nextIteration
			Endif
			'------- validation
			ret = existhtmlelement("DIV[OUTERTEXT='" + applicantFName$ + "', INDEX=2]")
			if ret <> 1 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": contact search validation failed", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": expected html element (contact card) not found.", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-contact_search.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - enter search criteria", crlf + crlf)
				closebrowser()
				goto nextIteration
			endif
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": searched for contact", crlf)
			endif


			'-------------------- select returned contact
			res = clickhtmlelement("DIV[OUTERTEXT='" + applicantFName$ + "', INDEX=7]")
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error selecting contact from search result", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-select_returned_contact.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - select contact", crlf + crlf)
				closebrowser()
				goto nextIteration
			Endif
			'------- validation
			ret = existhtmlelement("DIV[OUTERTEXT='0/600',CLASS='zw-default-div-style compose-box_t']")
			if ret <> 1 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": select contact validation failed", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": expected element (text message inputbox) not found", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-select_returned_contact.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - select contact", crlf + crlf)
				closebrowser()
				goto nextIteration
			Endif
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": selected contact from search result", crlf)
			endif


			'-------------------- compose text message
			res = writehtml("TEXTAREA[CLASS='zk-text-editor_input']", "Hello " + applicantFName$ + ",<Enter>Thank you for applying to Visiting Angels. We have scheduled an interview time for you on " + firstAppDate$ + " at " +  firstAppTime$ + ". You will be receiving two emails with interview packets (Pre 1st Interview and 1st Interview). Please click the 'Review and Sign' link and provide the information requested. If you do not have internet access to get online and finish the documentation, we can provide you access to a computer in our office (you will need to know your email password). Please bring your photo ID, social security card, and proof of auto insurance. We look forward to seeing you soon!<Enter>")
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error entering message text", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-enter_message_text.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - enter msg text", crlf + crlf)
				closebrowser()
				goto nextIteration
			Endif
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": entered initial text message", crlf)
			endif


			'-------------------- click send button
			usewindow("FIREFOX.EXE|MozillaWindowClass|Zipwhip | Daniel Nelson � Mozilla Firefox", 1)
			if iEnvironment = 1 then
				movemouse(1300, 1010, absolute)
				pause 1
				clickmouse(left, double, 1300, 1010, absolute)
			endif
			if iEnvironment = 2 then
				movemouse(1380, 1015, absolute)
				pause 1
				clickmouse(left, double, 1380, 1015, absolute)
			endif
			pause 1
			write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": initial text message sent", crlf)
			write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": initial text message sent", crlf)
			write(successLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
			write(successLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
			write(successLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: initial text msg sent", crlf + crlf)


			'-------------------------------------------------------------------------------------------------------------------------------- schedule day before confirmation msg
			'-------------------- check if day before appt is today
			if sCurrDay$ >= firstAppPriorDay$ then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": day before appt is today or before; skipping schedule prior day confirm text", crlf)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": day before appt is today or before; skipping schedule prior day confirm text", crlf)
				goto dayOfConfirm
			endif


			'reload home page to alleviate page not loaded errors
			navigate(zipWhipURL$)


			'-------------------- navigate to conversations
			usepage("Zipwhip | Daniel Nelson")
			res = clickhtmlelement("BUTTON[CLASS='zk-button zk-button-transparent z']")
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error clicking 'conversations' icon", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-click-conversations_icon.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - click conversations", crlf + crlf)
				closebrowser()
				goto nextIteration
			Endif
			'------- validation
			pause 10 secs until
				bitmap(imagePath$ + "zipwhip-conversationsPageIcon.bmp")
				inwindow("FIREFOX.EXE|MozillaWindowClass|Zipwhip | Daniel Nelson � Mozilla Firefox", 1)
			pausefalse
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": clicking 'conversations' validation failed", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": clicking 'expected element (bitmap) not found.", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-click_conversations_icon.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - click conversations", crlf + crlf)
				closebrowser()
				goto nextIteration
			endpause
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": clicked 'conversations' icon", crlf)
			endif


			'-------------------- enter applicant name as search criteria
			res = writehtml("INPUT TEXT[NAME='contactSearch']", applicantFName$ + " " + applicantLName$)
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error entering 'search criteria'", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-enter_search_criteria.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - enter search criteria", crlf + crlf)
				closebrowser()
				goto nextIteration
			Endif
			'------- validation
			ret = existhtmlelement("DIV[OUTERTEXT='" + applicantFName$ + "', INDEX=2]")
			if ret <> 1 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": contact search validation failed", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": expected html element (contact card) not found.", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-contact_search.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - enter search criteria", crlf + crlf)
				closebrowser()
				goto nextIteration
			endif
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": searched for contact", crlf)
			endif


			'-------------------- select returned contact
			res = clickhtmlelement("DIV[OUTERTEXT='" + applicantFName$ + "', INDEX=7]")
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error selecting contact from search result", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-select_returned_contact.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - select contact", crlf + crlf)
				closebrowser()
				goto nextIteration
			Endif
			'------- validation
			ret = existhtmlelement("DIV[OUTERTEXT='0/600',CLASS='zw-default-div-style compose-box_t']")
			if ret <> 1 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": select contact validation failed", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": expected element (text message inputbox) not found", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-select_returned_contact.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - select contact", crlf + crlf)
				closebrowser()
				goto nextIteration
			Endif
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": selected contact from search result", crlf)
			endif


			'-------------------- click 'clock' icon to schedule msg 
			usepage("Zipwhip | Daniel Nelson")
			res = clickhtmlelement("BUTTON[CLASS='zk-button zk-button-transparent zk-hover-icon s', INDEX=2]")
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error clicking 'clock' icon", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-click_clock_icon.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - click clock", crlf + crlf)
				closebrowser()
				goto nextIteration
			Endif
			'------- validation
			ret = existhtmlelement("BUTTON[CLASS='SingleDatePickerInpu']")
			if ret <> 1 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": clicking 'clock' validation failed", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": expected element (date picker) not found.", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-click_clock_icon.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - click clock", crlf + crlf)
				closebrowser()
				goto nextIteration
			Endif
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": clicked 'clock' icon (schedule)", crlf)
			endif


			'-------------------- click date picker control
			res = clickhtmlelement("BUTTON[CLASS='SingleDatePickerInpu']")
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error clicking date control", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-click_date_picker_control.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - click date picker control", crlf + crlf)
				closebrowser()
				goto nextIteration
			Endif
			'------- validation
			ret = existhtmlelement("DIV[CLASS='DayPicker_transition']")
			if ret <> 1 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": clicking date picker validation failed", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": expected element (calendar) not found.", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-click_date_picker_control.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - click date picker control", crlf + crlf)
				closebrowser()
				goto nextIteration
			Endif
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": clicked date picker control", crlf)
			endif


			'-------------------- enter day prior to appointment
			writehtmlpaste("INPUT TEXT[NAME='SEND_MESSAGE_PANEL_D']", firstAppPriorDate$, delete)
			pause 2
			res = writehtmlpaste("INPUT TEXT[NAME='SEND_MESSAGE_PANEL_D']", firstAppPriorDate$, delete)
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error entering date", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-enter_prior_date.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - enter day before appt", crlf + crlf)
				closebrowser()
				goto nextIteration
			Endif
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": entered day before appt date", crlf)
			endif


			'-------------------- select time picker control
			ret = useocrengine(3)
			usewindow("FIREFOX.EXE|MozillaWindowClass|Zipwhip | Daniel Nelson � Mozilla Firefox", 1)
			if iEnvironment = 1 then
				res = clickontextocr("ET", left, single, inarea(1116, 992, 105, 38), -40, 0)
			endif
			if iEnvironment = 2 then
				clickmouse(left, double, 1168, 1012, absolute)
			endif
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error clicking time picker control", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-click_time-picker_control.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - click time picker control", crlf + crlf)
				closebrowser()
				goto nextIteration
			Endif
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": clicked time picker control", crlf)
			endif


			'-------------------- enter scheduled message time
			sendkeys(dayPriorAppHour$)
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error entering scheduled hour", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-enter_scheduled_hour.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - enter hour", crlf + crlf)
				closebrowser()
				goto nextIteration
			Endif
			pause 2
			sendkeys(dayPriorAppMinutes$)
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error entering scheduled minute", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-enter_scheduled_minute.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - enter minutes", crlf + crlf)
				closebrowser()
				goto nextIteration
			Endif
			pause 2

			sendkeys(dayPriorDayNight$)
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error entering time of day", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-enter_scheduled_time_of_day.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - enter am/pm", crlf + crlf)
				closebrowser()
				goto nextIteration
			Endif
			pause 2
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": entered scheduled time", crlf)
			endif


			'-------------------- compose day before msg
			usepage("Zipwhip | Daniel Nelson")
			res = writehtml("TEXTAREA[CLASS='zk-text-editor_input']", "Hello " + applicantFName$ + ",<Enter>You are scheduled for an interview at Visiting Angels Grove City tomorrow " + firstAppDate$ + " at " +  firstAppTime$ + ". You should have received emails with Adobe documents to be filled out and signed electronically. It would be extremely helpful in streamlining your interview if you could complete those prior to your arrival. Also, if you have not already done so, please fill out our online application at https://generations.idb-sys.com/OnlineApplication.aspx?guid=ccfff3c9-c5ab-4bea-aeb5-9f8001115743 . Thank you and we look forward to seeing you!")
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error composing msg", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-enter_message_text_2.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - enter msg text", crlf + crlf)
				closebrowser()
				goto nextIteration
			Endif
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": entered day before confirm msg text", crlf)
			endif


			'-------------------- click 'schedule' button
			usewindow("FIREFOX.EXE|MozillaWindowClass|Zipwhip | Daniel Nelson � Mozilla Firefox", 1)
			if iEnvironment = 1 then
				clickmouse(left, double, 1300, 1010, absolute)
			endif
			if iEnvironment = 2 then
				clickmouse(left, double, 1380, 1015, absolute)
			endif
			pause 1
			write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": day before confirm msg scheduled", crlf)
			write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": day before confirm msg scheduled", crlf)
			write(successLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
			write(successLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
			write(successLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: day before confirm msg scheduled", crlf + crlf)


			'-------------------------------------------------------------------------------------------------------------------------------- schedule day of confirm text
dayOfConfirm:
			'reload home page to alleviate page not loaded errors
			navigate(zipWhipURL$)


			'-------------------- enter applicant name as search criteria
			res = writehtml("INPUT TEXT[NAME='contactSearch']", applicantFName$ + " " + applicantLName$)
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error entering 'search criteria'", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-enter_search_criteria.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - enter search criteria", crlf + crlf)
				closebrowser()
				goto nextIteration
			Endif
			'------- validation
			ret = existhtmlelement("DIV[OUTERTEXT='" + applicantFName$ + "', INDEX=2]")
			if ret <> 1 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": contact search validation failed", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": expected html element (contact card) not found.", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-contact_search.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - enter search criteria", crlf + crlf)
				closebrowser()
				goto nextIteration
			endif
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": searched for contact", crlf)
			endif


			'-------------------- select returned contact
			res = clickhtmlelement("DIV[OUTERTEXT='" + applicantFName$ + "', INDEX=7]")
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error selecting contact from search result", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-select_returned_contact.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - select contact", crlf + crlf)
				closebrowser()
				goto nextIteration
			Endif
			'------- validation
			ret = existhtmlelement("DIV[OUTERTEXT='0/600',CLASS='zw-default-div-style compose-box_t']")
			if ret <> 1 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": select contact validation failed", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": expected element (text message inputbox) not found", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-select_returned_contact.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - select contact", crlf + crlf)
				closebrowser()
				goto nextIteration
			Endif
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": selected contact from search result", crlf)
			endif


			'-------------------- compose text message
			res = writehtml("TEXTAREA[CLASS='zk-text-editor_input']", "Good morning " + applicantFName$ + ", this is Visiting Angels reminding you of your interview today at " + firstAppTime$ + ". Please reply to confirm as our office runs on confirmed appointments only.<Enter>Please text '1' to confirm, '2' to reschedule, or '3' to cancel.<Enter>Thank you and we look forward to seeing you.")
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error entering message text (3)", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-enter_message_text_3.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - enter msg text", crlf + crlf)
				closebrowser()
				goto nextIteration
			Endif
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": entered same day confirm msg text", crlf)
			endif


			'-------------------- click 'clock' icon to schedule msg 
			usepage("Zipwhip | Daniel Nelson")
			res = clickhtmlelement("BUTTON[CLASS='zk-button zk-button-transparent zk-hover-icon s', INDEX=2]")
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error clicking 'clock' icon", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-click_clock_icon.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - click clock", crlf + crlf)
				closebrowser()
				goto nextIteration
			Endif
			'------- validation
			ret = existhtmlelement("BUTTON[CLASS='SingleDatePickerInpu']")
			if ret <> 1 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": clicking 'clock' validation failed", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": expected element (date picker) not found.", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-click_clock_icon.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - click clock", crlf + crlf)
				closebrowser()
				goto nextIteration
			Endif
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": clicked 'clock' icon (schedule)", crlf)
			endif


			'-------------------- click date picker control
			res = clickhtmlelement("BUTTON[CLASS='SingleDatePickerInpu']")
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error clicking date control", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-click_date_picker_control.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - click date picker control", crlf + crlf)
				closebrowser()
				goto nextIteration
			Endif
			'------- validation
			ret = existhtmlelement("DIV[CLASS='DayPicker_transition']")
			if ret <> 1 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": clicking date picker validation failed", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": expected element (calendar) not found.", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-click_date_picker_control.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: validation error - click date picker control", crlf + crlf)
				closebrowser()
				goto nextIteration
			Endif
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": clicked date picker control", crlf)
			endif


			'-------------------- enter day of appointment
			writehtmlpaste("INPUT TEXT[NAME='SEND_MESSAGE_PANEL_D']", firstAppDate$, delete)
			pause 2
			res = writehtmlpaste("INPUT TEXT[NAME='SEND_MESSAGE_PANEL_D']", firstAppDate$, delete)
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error entering date", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-enter_date.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - enter day before appt", crlf + crlf)
				closebrowser()
				goto nextIteration
			Endif
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": entered day before appt date", crlf)
			endif


			'-------------------- select time picker control
			ret = useocrengine(3)
			usewindow("FIREFOX.EXE|MozillaWindowClass|Zipwhip | Daniel Nelson � Mozilla Firefox", 1)
			if iEnvironment = 1 then
				res = clickontextocr("ET", left, single, inarea(1116, 992, 105, 38), -40, 0)
			endif
			if iEnvironment = 2 then
				clickmouse(left, double, 1168, 1012, absolute)
			endif
			pause 2
			'------- error handling
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error clicking time picker control", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-click_time-picker_control.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - click time picker control", crlf + crlf)
				closebrowser()
				goto nextIteration
			Endif
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": clicked time picker control", crlf)
			endif


			'-------------------- enter scheduled message time
			sendkeys(dayOfAppHour$)
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error entering scheduled hour", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-enter_scheduled_hour.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - enter hour", crlf + crlf)
				closebrowser()
				goto nextIteration
			Endif
			pause 2
			sendkeys(dayOfAppMinutes$)
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error entering scheduled minute", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-enter_scheduled_minute.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - enter minutes", crlf + crlf)
				closebrowser()
				goto nextIteration
			Endif
			pause 2

			sendkeys(dayOfDayNight$)
			if res <> 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error entering time of day", crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": error_code: (" + str$(res) + ") msg: " + #errormsg$, crlf)
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": resuming scan for next change event", crlf + crlf)
				hardcopy(screenshotsPath$ + currScript$ + "-" + applicantLName$ + "-enter_scheduled_time_of_day.bmp", 1, 1)
				write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow failed, proceeding to next change event", crlf + crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
				write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: script error - enter am/pm", crlf + crlf)
				closebrowser()
				goto nextIteration
			Endif
			pause 2
			'------- debug logging
			if res = 0 then
				write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": entered scheduled time", crlf)
			endif


			'-------------------- click 'schedule' button
			usewindow("FIREFOX.EXE|MozillaWindowClass|Zipwhip | Daniel Nelson � Mozilla Firefox", 1)
			if iEnvironment = 1 then
				clickmouse(left, double, 1300, 1010, absolute)
			endif
			if iEnvironment = 2 then
				clickmouse(left, double, 1380, 1015, absolute)
			endif
			pause 1
			write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": day of confirm msg scheduled", crlf + crlf)
			write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": day of confirm msg scheduled", crlf + crlf)
			write(successLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": record id: " + applicantID$, crlf)
			write(successLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": applicant: " + applicantFName$ + " " + applicantLName$, crlf)
			write(successLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": result: day of confirm msg scheduled", crlf + crlf)


			closebrowser()


			iSentCnt = iSentCnt + 1	'records processed counter


		endif	'end of stage if


		if curr_stage$ <> "1st Interview" then
			Write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": stage value did not trigger workflow, resuming scan for next change event", crlf + crlf)
		endif


	endif	'end of change event if


nextIteration:


i = i + 1


until i = 5000


'##############################################################
'##   			script end									 ##
'##############################################################
write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": ", crlf) 
write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow scan completed", crlf) 
write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": change events detected:            " + str$(iChangeCnt), crlf)
write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": events with '1st interview' stage: " + str$(iStageCnt), crlf)
write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": records msgs sent for:             " + str$(iSentCnt), crlf)
write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": workflow scan completed", crlf)
write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": change event rows detected: " + str$(iChangeCnt), crlf)
write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": 1st Interview events:       " + str$(iStageCnt), crlf)
write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": records msgs sent for:      " + str$(iSentCnt), crlf)
write(debugLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": ------------------------------------------------------", crlf + crlf)
write(executionLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": ------------------------------------------------------", crlf + crlf)
write(scanFailuresPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": ------------------------------------------------------", crlf + crlf)
write(successLogPath$, basicLogHdr$ + Time$() + ": " + currScript$ + ": ------------------------------------------------------", crlf + crlf)








