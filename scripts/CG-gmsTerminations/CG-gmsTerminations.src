'###############################################################################################################################################
'## author:                 todd busch
'##
'## description:            scans the change event column in employment inquiry list.xlsx spreadsheet in package downloads folder; it will 
'##							send the appropriate packets (pre and 1st int or 2nd int) for rows flagged 'yes' that have a 1st or 2nd  
'##							interview stage and do not have any reference to those packets in the adobe status column (e.g. [1st int pkt sent]) 
'##
'## run in:					chrome
'##
'## notes:                  
'##							
'###############################################################################################################################################

'###############################################################################################################################################
'##   													script prep																			  
'###############################################################################################################################################
include "C:\v-angels-automation\framework\CG-loadWorkflowData\CG-loadWorkflowData.src"
include "C:\v-angels-automation\framework\CG-globalFunctions\CG-globalFunctions.src"
include "C:\v-angels-automation\framework\CG-gmsFunctions\CG-gmsFunctions.src"
include "c:\v-angels-automation\framework\CG-globalWinFunctions\CG-globalWinFunctions.src"
include "c:\v-angels-automation\framework\CG-globalWebFunctions\CG-globalWebFunctions.src"
include "c:\v-angels-automation\framework\CG-globalWebValidations\CG-globalWebValidations.src"
include "C:\v-angels-automation\framework\CG-globalLogging\CG-globalLogging.src"
include "C:\v-angels-automation\framework\CG-globalSubDefinitions\CG-globalSubDefinitions.src"
include "C:\v-angels-automation\framework\CG-globalVariables\CG-globalVariables.src"
Include "C:\v-angels-automation\object-repos\gms\gmsObjectRepository.src"


currScript$ = "CG-gmsTerminations"


#IgnoreErrors = 1


'-------------------- read in columns from employment inquiry doc
if LoadWorkflowData(currScript$) = 1 then
	criticalStop()
endif


'###############################################################################################################################################
'##   													script start																			  
'###############################################################################################################################################
logStartScript("gms terminations")

'------------------------------------------------------------------------------------------------------------------------------ begin iterating through change event column

i = 0


repeat


	'-------------------- get change status of current row
	curr_status$ = arrChangeEvents$(i)


    if curr_status$ = "Yes" then
        iEventCnt = iEventCnt + 1
        iExcelRow = i + 2
        logEventFound()

'------------------------------------------------------------------------------------------------------------------------------ stage check

       '-------------------- get the stage for the current change event
		curr_stage$ = arrCurrentStage$(i)


        if gmsTermsChkStage() = 0 then
            iStageCnt = iStageCnt + 1
            logStageMatch()
        else
            logStageBypass()
            goto nextIteration
        endif


        '-------------------- get data for current row
        gmsTermsGetData()
        logDataValues()        
        termedLOADate$ = gmsTermsFmtDates$()
        
'------------------------------------------------------------------------------------------------------------------------------ status check

        '-------------------- check gms status column for qualifying values
        if gmsTermsChkStatus() = 1 then
            goto nextIteration
        endif

 '------------------------------------------------------------------------------------------------------------------------------ log in
 
        '-------------------- invoke browser
        if webInvokeBrowser("FF", gmsURL$) = 1 then
            nextScript()
            goto nextIteration
        endif


		if existhtmlelement(inputGMSUsername$) = 1 then

			'-------------------- enter username
			usepage(pgGMSLogin$)
			if webEnterText(inputGMSUsername$, gmsUsername$, "entering username") <> 0 then
				goto nextIteration
			endif
			if webValidateText(inputGMSUsername$, gmsUsername$, "entering username") <> 0 then
				goto nextIteration
			endif


			'-------------------- enter password
			usepage(pgGMSLogin$)
			if webEnterText(inputGMSPassword$, gmsPassword$, "entering password") <> 0 then
				goto nextIteration
			endif
			if webValidateText(inputGMSPassword$, gmsPassword$, "entering password") <> 0 then
				goto nextIteration
			endif


			'-------------------- click 'sign in' button
			if webClickElement(btnGMSLogin$, "clicking login button") <> 0 then
				goto nextIteration
			endif
			pause 5
			if webValidateElement(bmpGMSLogo$, "gms logo", "clicking login button") <> 1 then
				goto nextIteration
			endif
	    endif


        '-------------------- ensure correct company is active
        if gmsCompanyChk = 1 then
            goto nextiteration
        endif

'------------------------------------------------------------------------------------------------------------------------------ employee search

        '-------------------- nav to employee terminations
        if webClickElement(lnkGMSEmployeeTerm$, "clicking employee terminations link") <> 0 then
            goto nextIteration
        endif
        pause 1
        if webValidateCurrPage(pgGMSEmployeeTerminations$, "clicking employee terminations link") <> 0 then
            goto nextIteration
        endif


        '-------------------- enter search criteria
        if webEnterText(inputGMSEmployeeSrc$, applicantFName$ + " " + applicantLName$, "entering search criteria") <> 0 then
            goto nextIteration
        endif
        pause 2
        if webValidateElement(rowGMSSrcResults$, "search result row", "entering search criteria") <> 1 then
            goto nextIteration
        endif


        '-------------------- select employee
        if webClickElement(rowGMSSrcResCorpID$, "selecting employee") <> 0 then
            goto nextIteration
        endif
        pause 2
       if gmsTermsErrorChk() = 1 then
            goto nextIteration
        endif
        if webValidateElement(rowGMSCurrEmplStatus$, "curr status", "selecting employee") <> 1 then
            goto nextIteration
        endif

'------------------------------------------------------------------------------------------------------------------------------ complete termination form

        '-------------------- select termination status code
        if webSelectItem(selGMSTermStatusCode$, "TERMINATED", "selecting term status code") <> 0 then
            goto nextIteration
        endif
        if webValidateText(selGMSTermStatusCode$, "T", "selecting term status code") <> 0 then
            goto nextIteration
        endif


        '-------------------- select reason code
        if webSelectItem(selGMSReasonCode$, "TERMINATED", "selecting term reason code") <> 0 then
            goto nextIteration
        endif
        if webValidateText(selGMSReasonCode$, "TERM", "selecting term reason code") <> 0 then
            goto nextIteration
        endif


retryEnterTermDate:
        '-------------------- enter termination date
        usepage(pgGMSEmployeeTerminations$)
        if webEnterText(dtGMSTerminationDate$, termedLOADate$, "entering termed/loa date") <> 0 then
            goto nextIteration
        endif
        clickhtmlelement(lblGMSReassignPendAppr$)
        pause 1
        if gmsTermsEarlyDateChk() = 1 then
            goto retryEnterTermDate
        endif
        if gmsTermsEarlyDateChk() = 2 then
            if webClickElement(btnGMSDateMsgPopupYes$, "clicking continue") <> 0 then
                goto nextIteration
            endif
        endif
        if gmsTermsEarlyDateChk() = 1 then
            if webClickElement(btnGMSDateMsgPopupNo$, "clicking no") <> 0 then
                goto nextIteration
            endif
            goto retryEnterTermDate
        endif
        if webValidateText(dtGMSTerminationDate$, termedLOADate$, "entering termed/loa date") <> 0 then
            goto nextIteration
        endif


        '-------------------- select rehire designation
        if curr_stage$ = "NO ReHire Termed" then
            if webSelectItem(selGMSRehireDesignation$, "No", "Selecting rehire designation") <> 0 then
                goto nextIteration
            endif
            if webValidateText(selGMSRehireDesignation$, "N", "Selecting rehire designation") <> 0 then
                goto nextIteration
            endif
        else
            if webSelectItem(selGMSRehireDesignation$, "Yes", "Selecting rehire designation") <> 0 then
                goto nextIteration
            endif
            if webValidateText(selGMSRehireDesignation$, "Y", "Selecting rehire designation") <> 0 then
                goto nextIteration
            endif
        endif

'------------------------------------------------------------------------------------------------------------------------------ save form

        '-------------------- click save
        if webClickElement(btnGMSTerminationSave$, "saving termination") <> 0 then
            goto nextIteration
        endif
        pause 5
        if webValidateText(inputGMSEmployeeSrc$, "", "saving termination") <> 0 then
            goto nextIteration
        endif


        closebrowser()


        '-------------------- complete workflow
        logWorkflowSuccess("termination workflow completed successfully")
        iProcessed = iProcessed + 1


    endif


nextiteration:


i = i + 1


until i = 5000 	'iterate through all rows in array


'#############################################################################################################################
'##   												end	script										 						
'#############################################################################################################################
gmsTermsLogStats()