'###############################################################################################################################################
'## author:                 todd busch
'##
'## description:            scans the change event column in employment inquiry list.xlsx spreadsheet in package downloads folder; for rows
'##							with a 'yes' value 
'##
'## run in:					chrome
'##
'## notes:                  none
'##							
'###############################################################################################################################################

'###############################################################################################################################################
'##   													script prep																			  
'###############################################################################################################################################
include "C:\v-angels-automation\framework\CG-globalDimDeclarations\CG-globalDimDeclarations.src"
include "C:\v-angels-automation\framework\CG-loadWorkflowData\CG-loadWorkflowData.src"
include "C:\v-angels-automation\framework\CG-globalDataLoaders\CG-globalDataLoaders.src"
include "C:\v-angels-automation\framework\CG-globalFunctions\CG-globalFunctions.src"
include "C:\v-angels-automation\framework\CG-arcsFunctions\CG-arcsFunctions.src"
include "c:\v-angels-automation\framework\CG-globalWinFunctions\CG-globalWinFunctions.src"
include "c:\v-angels-automation\framework\CG-globalWebFunctions\CG-globalWebFunctions.src"
include "c:\v-angels-automation\framework\CG-globalWebValidations\CG-globalWebValidations.src"
include "C:\v-angels-automation\framework\CG-globalLogging\CG-globalLogging.src"
include "C:\v-angels-automation\framework\CG-globalSubDefinitions\CG-globalSubDefinitions.src"
include "C:\v-angels-automation\framework\CG-globalVariables\CG-globalVariables.src"
include "C:\v-angels-automation\object-repos\arcs\arcsObjectRepository.src"


currScript$ = "CG-arcsGetBackup"


#IgnoreErrors = 1

'------------------------------------------------------------------------------------------------------------------------------  read in columns from employment inquiry doc
if LoadWorkflowData(currScript$) = 1 then
	criticalStop()
endif


'###############################################################################################################################################
'##   													script start																		  
'###############################################################################################################################################
logStartScript(currScript$)


'------------------------------------------------------------------------------------------------------------------------------ begin iterating through change event column

i = 0


repeat


	'-------------------- get change status of current row
	curr_status$ = arrChangeEvents$(i)


	if curr_status$ = "Yes" then
		iEventCnt = iEventCnt + 1
		iExcelRow = i + 2
		logEventFound()

'------------------------------------------------------------------------------------------------------------------------------ stage check

		'-------------------- get stage for current change event
		curr_stage$ = arrCurrentStage$(i)


		if arcsSubAppStageChk() = 0 then
			iStageCnt = iStageCnt + 1
			logStageMatch()			
		else
			logStageBypass()
			goto nextIteration
		endif

		'-------------------- get data values for current record
		arcsGetBackupGetCurrData()
		logDataValues()


'------------------------------------------------------------------------------------------------------------------------------ status check

		'-------------------- verify background check is ready to be submitted
		if arcsSubAppStatusChk() = 1 then
			goto nextIteration
		endif
		iTriggeredCnt = iTriggeredCnt + 1


'------------------------------------------------------------------------------------------------------------------------------  log in

		'-------------------- invoke browser
		if webInvokeBrowser("FF", arcsURL$) = 1 then
			nextScript()
			goto nextIteration
		endif


		'-------------------- enter username
		usepage(pgArcsLogin$)
		if webEnterText(inputArcsUsername$, arcsUsername$, "entering username") <> 0 then
			goto nextIteration
		endif
		if webValidateText(inputArcsUsername$, arcsUsername$, "entering username") <> 0 then
			goto nextIteration
		endif

				
		'-------------------- enter password
		if webEnterText(inputArcsPassword$, arcsPassword$, "entering password") <> 0 then
			goto nextIteration
		endif
		if webValidateText(inputArcsPassword$, arcsPassword$, "entering password") <> 0 then
			goto nextIteration
		endif

				
		'-------------------- click login button
		if webClickElement(btnArcsLogin$, "clicking login") <> 0 then
			goto nextIteration
		endif
		if webValidateElement(imgARCSLogo$, "arcs logo", "clicking login") <> 1 then
			goto nextIteration
		endif
		pause 3

		'-------------------- accept end user agreement if presented
		if arcsSubAppAcceptUsrAgree() <> 0 then
			nextScript()
			goto nextIteration
		endif

'------------------------------------------------------------------------------------------------------------------------------ search for applicant

		'-------------------- navigate to person search page
		if webNavigate(urlArcsPersonSrc$, "nav to person search") <> 0 then
			goto nextIteration
		endif
		pause 2
		if webValidateCurrPage(pgArcsPersonSrc$, "nav to person search") <> 0 then
			goto nextIteration
		endif


		'-------------------- enter ssn
		usepage(pgArcsPersonSrc$)
		if webPasteText(inputArcsSSN$, applicantSSN$, "entering ssn") <> 0 then
			goto nextIteration
		endif
		pause 2
		if webValidateText(inputArcsSSN$, applicantSSN$, "entering ssn") <> 0 then
			goto nextIteration
		endif


		'-------------------- enter last name
		if webPasteText(inputArcsLName$, applicantLName$, "entering last name") <> 0 then
			goto nextIteration
		endif
		pause 2
		if webValidateText(inputArcsLName$, applicantLName$, "entering last name") <> 0 then
			goto nextIteration
		endif


		'-------------------- click search button
		if webClickElement(btnArcsSearch$, "clicking search button") <> 0 then
			goto nextIteration
		endif
        pause 2
        if webValidateCurrPage(pgArcsPersSummary$, "clicking search button") <> 0 then
            goto nextIteration
        endif

'------------------------------------------------------------------------------------------------------------------------------ download pdf

        '--------------------click the applications tab
        if webClickElement(tabArcsPersSummApps$, "clicking applications tab") <> 0 then
            goto nextIteration
        endif
        pause 2
        if webValidateElement(lnkArcsFinalResult$, "final results link", "clicking applications tab") <> 1 then
            goto nextIteration
        endif


        '-------------------- click final results link
        if webClickElement(lnkArcsFinalResult$, "clicking final results link") <> 0 then
            goto nextIteration
        endif
        pause 2


        '-------------------- click download button
        usewindow(wndFireFoxFinalResultsPDF$, 1)
        winMouseLeftClick(1800, 100, "clicking download button")
        pause 2


        '-------------------- name file
        UseWindow(wndFireFoxSaveAs$, 1)
    	WriteCombo("1", applicantFName$ + applicantLName$)


        '-------------------- save file
        UseWindow(wndFireFoxSaveAsBtn$, 1)
	    Click(Button, "&Save")

'------------------------------------------------------------------------------------------------------------------------------ move docs to onedrive

		'-------------------- shorten name/path for aesthetic purposes
		sDocName$ = applicantFName$ + applicantLName$


		'-------------------- move screenshot
		copyFile(localWinUser$ + "downloads\" + sDocName$ + ".bmp", bgBackupPath$ + sDocName$ + ".bmp")


		'-------------------- move pdf
		copyFile(localWinUser$ + "downloads\" + sDocName$ + ".pdf", bgBackupPath$ + sDocName$ + ".pdf")
		
		
        closebrowser()

        usePage(pgArcsPersSummary$)
        closebrowser()

		logWorkflowSuccess("workflow completed, pdf successfully downloaded")

        iCompleted = iCompleted + 1

    endif


nextIteration:


i = i + 1


until i = 5000	'iterate through all rows in array

'###############################################################################################################################################
'##   													script end
'###############################################################################################################################################

arcsGetBackupLogStats()



